{
    "Alan Kay": [
        "The best way to predict the future is to invent it.",
        "People who are really serious about software should make their own hardware.",
        "A change in perspective is worth 80 IQ points.",
        "Perspective is worth 80 IQ points.",
        "Point of view is worth 80 IQ points",
        "Technology is anything that wasn't around when you were born.",
        "The future is not laid out on a track. It is something that we can decide, and to the extent that we do not violate any known laws of the universe, we can probably make it work the way that we want to.",
        "I don't know how many of you have ever met Dijkstra, but you probably know that arrogance in computer science is measured in nano-Dijkstras.",
        "Actually I made up the term \"object-oriented\", and I can tell you I did not have C++ in mind.",
        "I finally understood that the half page of code on the bottom of page 13 of the Lisp 1.5 manual was Lisp in itself. These were “Maxwell’s Equations of Software!”",
        "Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves.",
        "Perl is another example of filling a tiny, short-term need, and then being a real problem in the longer term. Basically, a lot of the problems that computing has had in the last 25 years comes from systems where the designers were trying to fix some short-term thing and didn’t think about whether the idea would scale if it were adopted. There should be a half-life on software so old software just melts away over 10 or 15 years.",
        "Basic would never have surfaced because there was always a language better than Basic for that purpose. That language was Joss, which predated Basic and was beautiful. But Basic happened to be on a GE timesharing system that was done by Dartmouth, and when GE decided to franchise that, it started spreading Basic around just because it was there, not because it had any intrinsic merits whatsoever.",
        "Computing spread out much, much faster than educating unsophisticated people can happen. In the last 25 years or so, we actually got something like a pop culture, similar to what happened when television came on the scene and some of its inventors thought it would be a way of getting Shakespeare to the masses. But they forgot that you have to be more sophisticated and have more perspective to understand Shakespeare. What television was able to do was to capture people as they were. So I think the lack of a real computer science today, and the lack of real software engineering today, is partly due to this pop culture.",
        "Sun Microsystems had the right people to make Java into a first-class language, and I believe it was the Sun marketing people who rushed the thing out before it should have gotten out.",
        "If the pros at Sun had had a chance to fix Java, the world would be a much more pleasant place. This is not secret knowledge. It’s just secret to this pop culture.",
        "I fear —as far as I can tell— that most undergraduate degrees in computer science these days are basically Java vocational training. I’ve heard complaints from even mighty Stanford University with its illustrious faculty that basically the undergraduate computer science program is little more than Java certification.",
        "Most creativity is a transition from one context into another where things are more surprising. There’s an element of surprise, and especially in science, there is often laughter that goes along with the “Aha.” Art also has this element. Our job is to remind us that there are more contexts than the one that we’re in — the one that we think is reality.",
        "I hired finishers because I’m a good starter and a poor finisher.",
        "The flip side of the coin was that even good programmers and language designers tended to do terrible extensions when they were in the heat of programming, because design is something that is best done slowly and carefully.",
        "However, I am no big fan of Smalltalk either, even though it compares very favourably with most programming systems today (I don’t like any of them, and I don’t think any of them are suitable for the real programming problems of today, whether for systems or for end-users).",
        "Possibly the only real object-oriented system in working order. (About Internet)",
        "The Internet was done so well that most people think of it as a natural resource like the Pacific Ocean, rather than something that was man-made. When was the last time a technology with a scale like that was so error-free? The Web, in comparison, is a joke. The Web was done by amateurs."
    ],
    "Alan Turing": [
        "Mathematical reasoning may be regarded rather schematically as the exercise of a combination of two facilities, which we may call intuition and ingenuity. The activity of the intuition consists in making spontaneous judgements which are not the result of conscious trains of reasoning... The exercise of ingenuity in mathematics consists in aiding the intuition through suitable arrangements of propositions, and perhaps geometrical figures or drawings.",
        "Instruction tables will have to be made up by mathematicians with computing experience and perhaps a certain puzzle-solving ability. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself.",
        "A man provided with paper, pencil, and rubber, and subject to strict discipline, is in effect a universal machine.",
        "Science is a differential equation. Religion is a boundary condition.",
        "The Exclusion Principle is laid down purely for the benefit of the electrons themselves, who might be corrupted (and become dragons or demons) if allowed to associate too freely.",
        "A computer would deserve to be called intelligent if it could deceive a human into believing that it was human.",
        "We do not wish to penalise the machine for its inability to shine in beauty competitions, nor to penalise a man for losing in a race against an aeroplane. The conditions of our game make these disabilities irrelevant.",
        "May not machines carry out something which ought to be described as thinking but which is very different from what a man does?",
        "We are not asking whether all digital computers would do well in the game nor whether the computers at present available would do well, but whether there are imaginable computers which would do well.",
        "The idea behind digital computers may be explained by saying that these machines are intended to carry out any operations which could be done by a human computer.",
        "A digital computer can usually be regarded as consisting of three parts: (i) Store. (ii) Executive unit. (iii) Control. ...The executive unit is the part which carries out the various individual operations involved in a calculation. ...It is the duty of the control to see that...[the table of] instructions are obeyed correctly and in the right order. ...A typical instruction might say—\"Add the number stored in position 6809 to that in 4302 and put the result back into the latter storage position.\" Needless to say it would not occur in the machine expressed in English. It would more likely be coded in a form such as 6809430217. Here 17 says which of various possible operations [add] is to be performed on the two numbers. ...It will be noticed that the instruction takes up 10 digits and so forms one packet of information...",
        "Suppose Mother wants Tommy to call at the cobbler's every morning on his way to school to see if her shoes are done, she can ask him afresh every morning. Alternatively she can stick up a notice once and for all in the hall which he will see when he leaves for school and which tells him to call for the shoes, and also to destroy the notice when he comes back if he has the shoes with him.",
        "If one wants to make a machine mimic the behaviour of the human computer in some complex operation one has to ask him how it is done, and then translate the answer into the form of an instruction table. Constructing instruction tables is usually described as \"programming.\"",
        "I believe that at the end of the century the use of words and general educated opinion will have altered so much that one will be able to speak of machines thinking without expecting to be contradicted.",
        "I am not very impressed with theological arguments whatever they may be used to support. Such arguments have often been found unsatisfactory in the past. In the time of Galileo it was argued that the texts, \"And the sun stood still... and hasted not to go down about a whole day\" (Joshua x. 13) and \"He laid the foundations of the earth, that it should not move at any time\" (Psalm cv. 5) were an adequate refutation of the Copernican theory.",
        "The view that machines cannot give rise to surprises is due, I believe, to a fallacy to which philosophers and mathematicians are particularly subject. This is the assumption that as soon as a fact is presented to a mind all consequences of that fact spring into the mind simultaneously with it. It is a very useful assumption under many circumstances, but one too easily forgets that it is false. A natural consequence of doing so is that one then assumes that there is no virtue in the mere working out of consequences from data and general principles.",
        "We can only see a short distance ahead, but we can see plenty there that needs to be done."
    ],
    "Bill Gates": [
        "If something is expensive to develop, and somebody's not going to get paid, it won't get developed. So you decide: Do you want software to be written, or not?",
        "It's not manufacturers trying to rip anybody off or anything like that. There's nobody getting rich writing software that I know of.",
        "Instead of buying airplanes and playing around like some of our competitors, we've rolled almost everything back into the company.",
        "To create a new standard, it takes something that's not just a little bit different; it takes something that's really new and really captures people's imagination — and the Macintosh, of all the machines I've ever seen, is the only one that meets that standard.",
        "The next generation of interesting software will be done on the Macintosh, not the IBM PC.",
        "I believe OS/2 is destined to be the most important operating system, and possibly program, of all time.",
        "There's only one trick in software, and that is using a piece of software that's already been written.",
        "I have to say that in 1981, making those decisions, I felt like I was providing enough freedom for 10 years. That is, a move from 64 K to 640 K felt like something that would last a great deal of time. Well, it didn't - it took about only 6 years before people started to see that as a real problem.",
        "If people had understood how patents would be granted when most of today's ideas were invented, and had taken out patents, the industry would be at a complete standstill today.… The solution to this is patent exchanges with large companies and patenting as much as we can.",
        "I laid out memory so the bottom 640 K was general purpose RAM and the upper 384 I reserved for video and ROM, and things like that. That is why they talk about the 640 K limit. It is actually a limit, not of the software, in any way, shape, or form, it is the limit of the microprocessor. That thing generates addresses, 20-bits addresses, that only can address a megabyte of memory. And, therefore, all the applications are tied to that limit. It was ten times what we had before. But to my surprise, we ran out of that address base for applications within—oh five or six years people were complaining.",
        "Gary Kildall was one of the original pioneers of the PC revolution. He was a very creative computer scientist who did excellent work. Although we were competitors, I always had tremendous respect for his contributions to the PC industry. His untimely death was very unfortunate and he and his work will be missed.",
        "There are no significant bugs in our released software that any significant number of users want fixed. … I'm saying we don't do a new version to fix bugs. We don't. Not enough people would buy it. You can take a hundred people using Microsoft Word. Call them up and say \"Would you buy a new version because of bugs?\" You won't get a single person to say they'd buy a new version because of bugs. We'd never be able to sell a release on that basis.",
        "In terms of doing things I take a fairly scientific approach to why things happen and how they happen. I don't know if there's a god or not, but I think religious principles are quite valid.",
        "What we're saying to people is that every idea about ease-of-use, we can develop in software, for the PC, without asking them to buy new hardware, without asking them to throw away their old applications.",
        "Just in terms of allocation of time resources, religion is not very efficient. There's a lot more I could be doing on a Sunday morning.",
        "It's possible, you can never know, that the universe exists only for me. If so, it's sure going well for me, I must admit.",
        "We've done some good work, but all of these products become obsolete so fast... It will be some finite number of years, and I don't know the number — before our doom comes.",
        "One thing we have got to change in our strategy - allowing Office documents to be rendered very well by other peoples browsers is one of the most destructive things we could do to the company. We have to stop putting any effort into this and make sure that Office documents very well depends on PROPRIETARY IE capabilities.",
        "About 3 million computers get sold every year in China, but people don't pay for the software. Someday they will, though. As long as they are going to steal it, we want them to steal ours. They'll get sort of addicted, and then we'll somehow figure out how to collect sometime in the next decade.",
        "Sometimes we do get taken by surprise. For example, when the Internet came along, we had it as a fifth or sixth priority. It wasn't like somebody told me about it and I said, \"I don't know how to spell that.\" I said, \"Yeah, I've got that on my list, so I'm okay.\" But there came a point when we realized it was happening faster and was a much deeper phenomenon than had been recognized in our strategy.",
        "Your most unhappy customers are your greatest source of learning.",
        "Microsoft has had clear competitors in the past. It’s a good thing we have museums to document that.",
        "We don't have the user centricity. Until we understand context, which is way beyond presence — presence is the most trivial notion, just am I on this device or not; it doesn't say am I meeting with something, am I focused on writing something.",
        "Like almost everyone who uses e-mail, I receive a ton of spam every day. Much of it offers to help me get out of debt or get rich quick. It would be funny if it weren't so irritating.",
        "Spam will be a thing of the past in two years' time.",
        "Does the e-mail say it's about 'enlargement' — that might be spam.",
        "Personal computing today is a rich ecosystem encompassing massive PC-based data centers, notebook and Tablet PCs, handheld devices, and smart cell phones. It has expanded from the desktop and the data center to wherever people need it — at their desks, in a meeting, on the road or even in the air.",
        "If you show people the problems and you show people the solutions they will be moved to act.",
        "Understand that this is the last physical format there will ever be.",
        "Any operating system without a browser is going to be fucking out of business. Should we improve our product, or go out of business?",
        "I wish I wasn't … There's nothing good that comes out of that. You get more visibility as a result of it.",
        "Stolen's a strong word. It's copyrighted content that the owner wasn't paid for. So yes.",
        "I'm a big believer that as much as possible, and there's obviously political limitations, freedom of migration is a good thing.",
        "If you just want to say, \"Steve Jobs invented the world, and then the rest of us came along,\" that's fine. If you’re interested, [Vista development chief] Jim Allchin will be glad to educate you feature by feature what the truth is. … Let’s be realistic, who came up with \"File/Edit/View/Help\"? Do you want to go back to the original Mac and think about where those interface concepts came from?",
        "Robots will play an important role in providing physical assistance and even companionship for the elderly.",
        "Just giving people devices has a really horrible track record. You really have to change the curriculum and the teacher. And it's never going to work on a device where you don't have a keyboard-type input. Students aren't there just to read things. They're actually supposed to be able to write and communicate. And so it's going to be more in the PC realm—it's going to be a low-cost PC that lets them be highly interactive.",
        "The best way to prepare [to be a programmer] is to write programs, and to study great programs that other people have written. In my case, I went to the garbage cans at the Computer Science Center and fished out listings of their operating system.",
        "You've got to be willing to read other people's code, and then write your own, then have other people review your code. You've got to want to be in this incredible feedback loop where you get the world-class people to tell you what you're doing wrong...",
        "The finest pieces of software are those where one individual has a complete sense of exactly how the program works. To have that, you have to really love the program and concentrate on keeping it simple, to an incredible degree.",
        "We're no longer in the days where everything is super well crafted. But at the heart of the programs that make it to the top, you'll find that the key internal code was done by a few people who really know what they were doing.",
        "Unfortunately, many programs are so big that there is no one individual who really knows all the pieces, and so the amount of code sharing you get isn't as great. Also, the opportunity to go back and really rewrite something isn't quite as great, because there's always a new set of features that you're adding on to the same program.",
        "The worst programs are the ones where the programmers doing the original work don't lay a solid foundation, and then they're not involved in the program in the future.",
        "Programs today get very fat; the enhancements tend to slow the programs down because people put in special checks. When they want to add some feature, they'll just stick in these checks without thinking how they might slow the thing down.",
        "Before Paul and I started the company, we had been involved in some large-scale software projects that were real disasters. They just kept pouring people in, and nobody knew how they were going to stabilize the project. We swore to ourselves that we would do better.",
        "Success is a lousy teacher. It seduces smart people into thinking they can't lose.",
        "The obvious mathematical breakthrough would be development of an easy way to factor large prime numbers.",
        "One of the wonderful things about the information highway is that virtual equity is far easier to achieve than real-world equity...We are all created equal in the virtual world and we can use this equality to help address some of the sociological problems that society has yet to solve in the physical world,\"",
        "This leads to the paradox, that because the disease is only in the poor countries, there is not much investment. For example, there is more money put into baldness drugs, than are put into malaria. Now, baldness, it is a terrible thing [audience laughter] and rich men are afflicted, so that is why that priority is set.",
        "The success of the Nigeria programme hinges on the active participation of everyone to make sure that all children are reached by National Immunization Days (NIDs), Immunization Plus Days (IPDs) and the routine immunization programme, if the country capitalizes on the commitments I’ve heard in the past two days, Nigeria can lead the way to a polio-free Africa. \"Bill Gates visits Nigeria\" polioeradication.org (04 February 2009)",
        "We are in the end game, I'm optimistic that we will be successful. I'm personally very committed \"Gates, others pledge $630 million to beat polio\" Investing.com (21 January 2009)",
        "I’d like to start by telling you about my wife Melinda’s Aunt Myra. We see her a few times a year. Aunt Myra worked for many years taking reservations for Delta Airlines. She lived in New Orleans until Hurricane Katrina, and then she moved to Dallas, Melinda’s hometown. She loves to see our kids. When we all get together, she’ll sit down on the floor and play games with them. Aunt Myra also has polio. She’s in braces, and she has been ever since she was a little girl.",
        "In the last 20 years, thanks to your hard work, polio has declined by 99 percent. In 1988, 350,000 people got polio. By 2008, the number was down to just a couple of thousand. \"Bill Gates - Rotary International\" Bill & Melinda Gates foundation (21 January 2009)",
        "First we've got population. Now, the world today has 6.8 billion people. That's headed up to about nine billion. Now, if we do a really great job on new vaccines, health care, reproductive health services, we could lower that (forecast) by, perhaps, 10 or 15 percent, but there we see an increase of about 1.3 (per year).",
        "Let's burn the 99%.",
        "He [Steve Jobs] showed me the boat he was working on … and talked about how he's looking forward to being on it, even though we both knew there was a good chance that wouldn't happen.",
        "The moral systems of religion, I think, are superimportant. We've raised our kids in a religious way; they've gone to the Catholic church that Melinda goes to and I participate in. I've been very lucky, and therefore I owe it to try and reduce the inequity in the world. And that's kind of a religious belief. I mean, it's at least a moral belief.",
        "I agree with people like Richard Dawkins that mankind felt the need for creation myths. Before we really began to understand disease and the weather and things like that, we sought false explanations for them. Now science has filled in some of the realm – not all – that religion used to fill. But the mystery and the beauty of the world is overwhelmingly amazing, and there's no scientific explanation of how it came about. To say that it was generated by random numbers, that does seem, you know, sort of an uncharitable view. I think it makes sense to believe in God, but exactly what decision in your life you make differently because of it, I don't know.",
        "We would like every country to be self-sufficient so that both in terms of running a good primary health care system and funding a good primary health care system, it’s all OK, and they just participate in regional bodies that have standby capacity to deal with these things. Africa, of all the places in the world, is the furthest behind on being able to do that. And through aid, health and health systems in Africa have improved very, very dramatically.",
        "I see little commercial potential for the internet for the next 10 years.",
        "Intellectual property has the shelf life of a banana.",
        "Life is not fair. Get used to it... Be nice to nerds. Chances are you'll end up working for one.",
        "A future startup with no patents of its own will be forced to pay whatever price the giants choose to impose. That price might be high. Established companies have an interest in excluding future competitors."
    ],
    "Bjarne Stroustrup": [
        "Within C++, there is a much smaller and cleaner language struggling to get out.",
        "Proof by analogy is fraud.",
        "Design and programming are human activities; forget that and all is lost.",
        "A program that has not been tested does not work.",
        "An organisation that treats its programmers as morons will soon have programmers that are willing and able to act like morons only.",
        "Anybody who comes to you and says he has a perfect language is either naïve or a salesman.",
        "I have always wished for my computer to be as easy to use as my telephone; my wish has come true because I can no longer figure out how to use my telephone.",
        "People who think they know everything really annoy those of us who know we don't.",
        "C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do it blows your whole leg off.",
        "If you think it's simple, then you have misunderstood the problem.",
        "There are more useful systems developed in languages deemed awful than in languages praised for being beautiful--many more.",
        "I do not think that safety should be bought at the cost of complicating the expression of good solutions to real-life problems.",
        "The connection between the language in which we think/program and the problems and solutions we can imagine is very close. For this reason restricting language features with the intent of eliminating programmer errors is at best dangerous.",
        "If you do anything useful it will haunt you forever after, and if you have a major success you get decades of hard manual labor - meaning you have to work on the manual.",
        "One of the things I really like about programming languages is that it's the perfect excuse to stick your nose into any field. So if you're interested in high energy physics and the structure of the universe, being a programmer is one of the best ways to get in there. It's probably easier than becoming a theoretical physicist"
    ],
    "Brian Kernighan": [
        "Controlling complexity is the essence of computer programming.",
        "The most effective debugging tool is still careful thought, coupled with judiciously placed print statements.",
        "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?",
        "Do what you think is interesting, do something that you think is fun and worthwhile, because otherwise you won't do it well anyway.",
        "Advice to students: Leap in and try things. If you succeed, you can have enormous influence. If you fail, you have still learned something, and your next attempt is sure to be better for it. Advice to graduates: Do something you really enjoy doing. If it isn’t fun to get up in the morning and do your job or your school program, you’re in the wrong field."
    ],
    "Bruce Schneier": [
        "Anyone, from the most clueless amateur to the best cryptographer, can create an algorithm that he himself can't break.",
        "There are two kinds of cryptography in this world: cryptography that will stop your kid sister from reading your files, and cryptography that will stop major governments from reading your files.",
        "The lesson here is that it is insufficient to protect ourselves with laws; we need to protect ourselves with mathematics. Encryption is too important to be left solely to governments.",
        "Digital files cannot be made uncopyable, any more than water can be made not wet.",
        "It is poor civic hygiene to install technologies that could someday facilitate a police state.",
        "I mean, the computer industry promises nothing. Did you ever read a shrink-wrapped license agreement? You should read one. It basically says, if this product deliberately kills your children, and we knew it would, and we decided not to tell you because it might harm sales, we're not liable. I mean, it says stuff like that. They're absurd documents. You have no rights.",
        "Beware the Four Horsemen of the Information Apocalypse: terrorists, drug dealers, kidnappers, and child pornographers. Seems like you can scare any public into allowing the government to do anything with those four.",
        "Chaos is hard to create, even on the Internet. Here's an example. Go to Amazon.com. Buy a book without using SSL. Watch the total lack of chaos.",
        "When my mother gets a prompt 'Do you want to download this?' she's going to say yes. It's disingenuous for Microsoft to give you all of these tools [in Internet Explorer] with which to hang yourself, and when you do, then say it's your fault.",
        "More people are killed every year by pigs than by sharks, which shows you how good we are at evaluating risk.",
        "The very definition of news is something that hardly ever happens. If an incident is in the news, we shouldn't worry about it. It's when something is so common that its no longer news – car crashes, domestic violence – that we should worry.",
        "We can't keep weapons out of prisons; we can't possibly expect to keep them out of airports.",
        "The point of terrorism is to cause terror, sometimes to further a political goal and sometimes out of sheer hatred. The people terrorists kill are not the targets; they are collateral damage. And blowing up planes, trains, markets or buses is not the goal; those are just tactics. The real targets of terrorism are the rest of us: the billions of us who are not killed but are terrorized because of the killing. The real point of terrorism is not the act itself, but our reaction to the act. And we're doing exactly what the terrorists want.",
        "Not being angels is expensive",
        "Technical problems can be remediated. A dishonest corporate culture is much harder to fix.",
        "Only amateurs attack machines; professionals target people.",
        "In China, programs have to be certified by the government in order to be used on computers there, which sounds an awful lot like the Apple store."
    ],
    "C. A. R. Hoare": [
        "Programming languages on the whole are very much more complicated than they used to be: object orientation, inheritance, and other features are still not really being thought through from the point of view of a coherent and scientifically well-based discipline or a theory of correctness. My original postulate, which I have been pursuing as a scientist all my life, is that one uses the criteria of correctness as a means of converging on a decent programming language design—one which doesn’t set traps for its users, and ones in which the different components of the program correspond clearly to different components of its specification, so you can reason compositionally about it. [...] The tools, including the compiler, have to be based on some theory of what it means to write a correct program.",
        "There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult. It demands the same skill, devotion, insight, and even inspiration as the discovery of the simple physical laws which underlie the complex phenomena of nature.",
        "One fine morning, when the emperor felt hot and bored, he extricated himself carefully from under the mountain of clothes and is now living happily as a swineherd in another story. The tailor is canonized as the patron saint of all consultants, because in spite of the enormous fees he extracted, he was never able to convince his clients of his dawning realization that their clothes have no Emperor."
    ],
    "Dennis Ritchie": [
        "What we wanted to preserve was not just a good environment in which to do programming, but a system around which fellowship could form. We knew from experience that the essence of communal computing, as supplied by remote-access, time-shared machines, is not just to type programs into a terminal instead of a keypunch, but to encourage close communication.",
        "I am not now, nor have I ever been, a member of the demigodic party.",
        "UNIX is very simple, it just needs a genius to understand its simplicity.",
        "C is quirky, flawed, and an enormous success.",
        "Life's a bitch and then your feet wear down.",
        "Computer science research is different from these more traditional disciplines. Philosophically it differs from the physical sciences because it seeks not to discover, explain, or exploit the natural world, but instead to study the properties of machines of human creation. In this it as analogous to mathematics, and indeed the \"science\" part of computer science is, for the most part mathematical in spirit. But an inevitable aspect of computer science is the creation of computer programs: objects that, though intangible, are subject to commercial exchange.",
        "The greatest danger to good computer science research today may be excessive relevance. Evidence for the worldwide fascination with computers is everywhere, from the articles on the financial, and even the front pages of the newspapers, to the difficulties that even the most prestigious universities experience in finding and keeping faculty in computer science. The best professors, instead of teaching bright students, join start-up companies.",
        "Another danger is that commercial pressures of one sort or another will divert the attention of the best thinkers from real innovation to exploitation of the current fad, from prospecting to mining a known lode.",
        "The working examples of important new systems seem to have come either from entrepreneurial efforts (Visicalc is a good example) or from large companies, like Bell Labs and most especially Xerox, that were much involved with computers and could afford research into them, but did not regard them as their primary business.",
        "I think the Linux phenomenon is quite delightful, because it draws so strongly on the basis that Unix provided. Linux seems to be the among the healthiest of the direct Unix derivatives, though there are also the various BSD systems as well as the more official offerings from the workstation and mainframe manufacturers.",
        "My own computational world is a strange blend of Plan 9, Windows, and Inferno. I very much admire Linux's growth and vigor. Occasionally, people ask me much the same question [about Linux], but posed in a way that seems to expect an answer that shows jealousy or irritation about Linux vs. Unix as delivered and branded by traditional companies. Not at all; I think of both as the continuation of ideas that were started by Ken and me and many others, many years ago.",
        "I think one of the interesting things about the Linux phenomenon is that [Linus] has been able to keep some kind of control over such an amazingly extended development environment. I’m certainly glad that I didn’t have to develop C in public, because you get more suggestions than you really want. Being in this nice, small group, you can control that sort of thing. I honestly don’t know the dynamics and the details of the Linux kernel project. However, one of the knocks on Linux is that it is undisciplined. But I think probably the fairer observation is that it is amazingly disciplined, compared to what you would expect, given the nature of the endeavor.",
        "I don’t really distinguish between Linux and things that are more or less direct descendants of Unix. I think they’re all the same at some level. Often, people ask me, \"Do you feel jealous about Linux being the big thing.\" And the answer is no, for the same reason. I think they’re the same.",
        "Ritchie and Thompson made an amazing team; and they played Unix and C like a fine instrument. They sometimes divided up work almost on a subroutine-by-subroutine basis with such rapport that it almost seemed like the work of a single person. In fact, as Dennis has recounted, they once got their signals crossed and both wrote the same subroutine. The two versions did not merely compute the same result, they did it with identical source code! Their output was prodigious. Once I counted how much production code they had written in the preceding year − 100,000 lines! Prodigious didn’t mean slapdash. Ken and Dennis have unerring design sense. They write code that works, code that can be read, code that can evolve.",
        "There's that line from Newton about standing on the shoulders of giants. We're all standing on Dennis' shoulders."
    ],
    "Donald Knuth": [
        "Beware of bugs in the above code; I have only proved it correct, not tried it.",
        "I can’t be as confident about computer science as I can about biology. Biology easily has 500 years of exciting problems to work on. It’s at that level.",
        "The psychological profiling [of a programmer] is mostly the ability to shift levels of abstraction, from low level to high level. To see something in the small and to see something in the large.",
        "The important thing, once you have enough to eat and a nice house, is what you can do for others, what you can contribute to the enterprise as a whole.",
        "The whole thing that makes a mathematician’s life worthwhile is that he gets the grudging admiration of three or four colleagues.",
        "Science is what we understand well enough to explain to a computer. Art is everything else we do.",
        "A mathematical formula should never be \"owned\" by anybody! Mathematics belong to God.",
        "I define UNIX as 30 definitions of regular expressions living under one roof.",
        "I can’t go to a restaurant and order food because I keep looking at the fonts on the menu.",
        "Email is a wonderful thing for people whose role in life is to be on top of things. But not for me; my role is to be on the bottom of things. What I do takes long hours of studying and uninterruptible concentration.",
        "How can you own [...] numbers? Numbers belong to the world.",
        "In fact, my main conclusion after spending ten years of my life working on the TEX project is that software is hard. It’s harder than anything else I’ve ever had to do.",
        "If you find that you're spending almost all your time on theory, start turning some attention to practical things; it will improve your theories. If you find that you're spending almost all your time on practice, start turning some attention to theoretical things; it will improve your practice.",
        "By understanding a machine-oriented language, the programmer will tend to use a much more efficient method; it is much closer to reality.",
        "An algorithm must be seen to be believed.",
        "People who are more than casually interested in computers should have at least some idea of what the underlying hardware is like. Otherwise the programs they write will be pretty weird.",
        "Random numbers should not be generated with a method chosen at random",
        "The sun comes up just about as often as it goes down, in the long run, but this doesn't make its motion random.",
        "The reason is not to glorify \"bit chasing\"; a more fundamental issue is at stake here: Numerical subroutines should deliver results that satisfy simple, useful mathematical laws whenever possible. [...] Without any underlying symmetry properties, the job of proving interesting results becomes extremely unpleasant. The enjoyment of one's tools is an essential ingredient of successful work.",
        "Any inaccuracies in this index may be explained by the fact that it has been sorted with the help of a computer.",
        "Trees sprout up just about everywhere in computer science...",
        "Science is knowledge which we understand so well that we can teach it to a computer; and if we don't fully understand something, it is an art to deal with it.",
        "In this sense, we should continually be striving to transform every art into a science: in the process, we advance the art.",
        "The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming.",
        "To summarize: We have seen that computer programming is an art, because it applies accumulated knowledge to the world, because it requires skill and ingenuity, and especially because it produces objects of beauty. A programmer who subconsciously views himself as an artist will enjoy what he does and will do it better. Therefore we can be glad that people who lecture at computer conferences speak of the state of the Art.",
        "Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do."
    ],
    "Donald Norman": [
        "Academics get paid for being clever, not for being right.",
        "Although I firmly believe that there is no such thing as a stupid question, there can indeed be stupid answers. 42 is an example. Not only is this a poor ripoff of Doug Adams' Hitchhiker's Guide, but it isn't even a prime number. Everyone surely knows that numerical answers to profound questions are always prime. (The correct answer is 37.)",
        "Serious accidents are frequently blamed on \"human error.\" Yet careful analysis of such situations shows that the design or installation of the equipment has contributed significantly to the problems. The design team or installers did not pay sufficient attention to the needs of those who would be using the equipment, so confusion or error was almost unavoidable.",
        "When you have trouble with things—whether it's figuring out whether to push or pull a door or the arbitrary vagaries of the modern computer and electronics industries—it's not your fault. Don't blame yourself: blame the designer.",
        "Good design is also an act of communication between the designer and the user, except that all the communication has to come about by the appearance of the device itself. The device must explain itself.",
        "Technologists are not noted for learning from the errors of the past. They look forward, not behind, so they repeat the same problems over and over again. [...] As each new technology matures, customers are no longer happy with the flashy promises of the technology but instead demand understandable and workable designs. Slowly the manufacturers relearn the same basic principles and apply them to their products. The most egregious failures always come from the developers of the most recent technologies.",
        "If people keep buying poorly designed products, manufacturers and designers will think they are doing the right thing and continue as usual.",
        "Usability is not often thought of as a criterion during the purchasing process. Moreover, unless you actually test a number of units in a realistic environment doing typical tasks, you are not likely to notice the ease or difficulty of use. [...] Do it right there in the store. Do not be afraid to make mistakes or ask stupid questions. Remember, any problems you have are probably the design's fault, not yours.",
        "When a device as simple as a door has to come with an instruction manual—even a one-word manual—then it is a failure, poorly designed.",
        "The principle of visibility is violated over and over again in everyday things. In numerous designs crucial parts are carefully hidden away. Handles on cabinets distract from some design aesthetics, and so they are deliberately made invisible or left out. The cracks that signify the existence of a door can also distract from the pure lines of the design, so these significant cues are also minimized or eliminated. The result can be a smooth expanse of gleaming material, with no sign of doors or drawers, let alone of how those doors and drawers might be operated.",
        "Even though principles of rationality seem as often violated as followed, we still cling to the notion that human thought should be rational, logical, and orderly. Much of law is based upon the concept of rational thought and behavior. Much of economic theory is based upon the model of the rational human who attempts to optimize personal benefit, utility, or comfort. Many scientists who study artificial intelligence use the mathematics of formal logic—the predicate calculus—as their major tool to simulate thought. [...] Human thought is not like logic; it is fundamentally different in kind and spirit. The difference is neither worse nor better. But it is the difference that leads to creative discovery and to great robustness of behavior.",
        "Change the attitude toward errors. Think of an object's user as attempting to do a task, getting there by imperfect approximations. Don't think of the user as making errors; think of the actions as approximations of what is desired.",
        "In their work, designers often become expert with the device they are designing. Users are often expert at the task they are trying to perform with the device. [...] Professional designers are usually aware of the pitfalls. But most design is not done by professional designers, it is done by engineers, programmers, and managers.",
        "Innocence lost is not easily regained. The designer simply cannot predict the problems people will have, the misinterpretations that will arise, and the errors that will get made.",
        "Creeping featurism is a disease, fatal if not treated promptly. There are some cures, but, as usual, the best approach is to practice preventative medicine.",
        "Computer scientists have so far worked on developing powerful programming languages that make it possible to solve the technical problems of computation. Little effort has gone toward devising the languages of interaction.",
        "When I use a direct manipulation system—whether for text editing, drawing pictures, or creating and playing games—I do think of myself not as using a computer but as doing the particular task. The computer is, in effect, invisible. The point cannot be overstressed: make the computer system invisible.",
        "Hypertext makes a virtue out of lack of organization, allowing ideas and thoughts to be juxtaposed at will. [...] The advent of hypertext is apt to make writing much more difficult, not easier. Good writing, that is.",
        "In the consumer economy taste is not the criterion in the marketing of expensive soft drinks, usability is not the primary criterion in the marketing of home and office appliances. We are surrounded with objects of desire, not objects of use.",
        "As the technology matures, it becomes less and less relevant. The technology is taken for granted. Now, new customers enter the marketplace, customers who are not captivated by technology, but who instead want reliability, convenience, no fuss or bother, and low cost.",
        "Go to the bookstore and look at how many bookshelves are filled with books trying to explain how to work the devices. We don't see shelves of books on how to use television sets, telephones, refrigerators or washing machines. Why should we for computer-based applications?",
        "We are victims of our own success. We have let technology lead the way, pushing ever faster to newer, faster, and more powerful systems, with nary a moment to rest, contemplate, and to reflect upon why, how, and for whom all this energy has been expended.",
        "The major problems facing the development of products that are safer, less prone to error, and easier to use and understand are not technological: they are social and organizational."
    ],
    "Douglas Crockford": [
        "The good thing about reinventing the wheel is that you can get a round one.",
        "Progress comes from finding better ways to do things. Don’t be afraid of innovation. Don’t be afraid of ideas that are not your own.",
        "Don't worry about anything. Just do what you can and be the best you can be."
    ],
    "Douglas Engelbart": [
        "The key thing about all the world's big problems is that they have to be dealt with collectively. If we don't get collectively smarter, we're doomed.",
        "The better we get at getting better, the faster we will get better."
    ],
    "Edsger W. Dijkstra": [
        "For a number of years I have been familiar with the observation that the quality of programmers is a decreasing function of the density of go to statements in the programs they produce. More recently I discovered why the use of the go to statement has such disastrous effects, and I became convinced that the go to statement should be abolished from all \"higher level\" programming languages.",
        "Our intellectual powers are rather geared to master static relations and that our powers to visualize processes evolving in time are relatively poorly developed. For that reason we should do (as wise programmers aware of our limitations) our utmost to shorten the conceptual gap between the static program and the dynamic process, to make the correspondence between the program (spread out in text space) and the process (spread out in time) as trivial as possible.",
        "Testing shows the presence, not the absence of bugs",
        "A convincing demonstration of correctness being impossible as long as the mechanism is regarded as a black box, our only hope lies in not regarding the mechanism as a black box.",
        "When we take the position that it is not only the programmer's responsibility to produce a correct program but also to demonstrate its correctness in a convincing manner, then the above remarks have a profound influence on the programmer's activity: the object he has to produce must be usefully structured.",
        "The art of programming is the art of organizing complexity, of mastering multitude and avoiding its bastard chaos as effectively as possible.",
        "Program testing can be used to show the presence of bugs, but never to show their absence!",
        "The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility, and among other things he avoids clever tricks like the plague.",
        "Please don't fall into the trap of believing that I am terribly dogmatic about [the go to statement]. I have the uncomfortable feeling that others are making a religion out of it, as if the conceptual problems of programming could be solved by a simple trick, by a simple form of coding discipline!",
        "Don't blame me for the fact that competent programming, as I view it as an intellectual possibility, will be too difficult for \"the average programmer\" — you must not fall into the trap of rejecting a surgical technique because it is beyond the capabilities of the barber in his shop around the corner.",
        "Several people have told me that my inability to suffer fools gladly is one of my main weaknesses.",
        "Write a paper promising salvation, make it a 'structured' something or a 'virtual' something, or 'abstract', 'distributed' or 'higher-order' or 'applicative' and you can almost be certain of having started a new cult.",
        "For me, the first challenge for computing science is to discover how to maintain order in a finite, but very large, discrete universe that is intricately intertwined. And a second, but not less important challenge is how to mould what you have achieved in solving the first problem, into a teachable discipline: it does not suffice to hone your own intellect (that will join you in your grave), you must teach others how to hone theirs. The more you concentrate on these two challenges, the clearer you will see that they are only two sides of the same coin: teaching yourself is discovering what is teachable.",
        "As a result of a long sequence of coincidences I entered the programming profession officially on the first spring morning of 1952, and as far as I have been able to trace, I was the first Dutchman to do so in my country.",
        "We must be very careful when we give advice to younger people: sometimes they follow it!",
        "The major cause [of the software crisis] is that the machines have become several orders of magnitude more powerful! To put it quite bluntly: as long as there were no machines, programming was no problem at all; when we had a few weak computers, programming became a mild problem, and now we have gigantic computers, programming has become an equally gigantic problem. In this sense the electronic industry has not solved a single problem, it has only created them, it has created the problem of using its products.",
        "FORTRAN's tragic fate has been its wide acceptance, mentally chaining thousands and thousands of programmers to our past mistakes.",
        "LISP has been jokingly described as \"the most intelligent way to misuse a computer\". I think that description a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts.",
        "When FORTRAN has been called an infantile disorder, full PL/1, with its growth characteristics of a dangerous tumor, could turn out to be a fatal disease.",
        "If you want more effective programmers, you will discover that they should not waste their time debugging, they should not introduce the bugs to start with.",
        "Program testing can be a very effective way to show the presence of bugs, but it is hopelessly inadequate for showing their absence.",
        "The effective exploitation of his powers of abstraction must be regarded as one of the most vital activities of a competent programmer.",
        "The use of COBOL cripples the mind; its teaching should, therefore, be regarded as a criminal offense.",
        "APL is a mistake, carried through to perfection. It is the language of the future for the programming techniques of the past: it creates a new generation of coding bums.",
        "FORTRAN, 'the infantile disorder', by now nearly 20 years old, is hopelessly inadequate for whatever computer application you have in mind today: it is now too clumsy, too risky, and too expensive to use.",
        "In the good old days physicists repeated each other's experiments, just to be sure. Today they stick to FORTRAN, so that they can share each other's programs, bugs included.",
        "It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration.",
        "Besides a mathematical inclination, an exceptionally good mastery of one's native tongue is the most vital asset of a competent programmer.",
        "Simplicity is prerequisite for reliability.",
        "Programming is one of the most difficult branches of applied mathematics; the poorer mathematicians had better remain pure mathematicians.",
        "We can found no scientific discipline, nor a hearty profession, on the technical mistakes of the Department of Defense and, mainly, one computer manufacturer.",
        "About the use of language: it is impossible to sharpen a pencil with a blunt axe. It is equally vain to try to do it with ten blunt axes instead.",
        "Thank goodness we don't have only serious problems, but ridiculous ones as well.",
        "How do we convince people that in programming simplicity and clarity —in short: what mathematicians call \"elegance\"— are not a dispensable luxury, but a crucial matter that decides between success and failure?",
        "I think of the company advertising \"Thought Processors\" or the college pretending that learning BASIC suffices or at least helps, whereas the teaching of BASIC should be rated as a criminal offence: it mutilates the mind beyond recovery.",
        "The question of whether Machines Can Think... is about as relevant as the question of whether Submarines Can Swim.",
        "Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.",
        "Probably I am very naive, but I also think I prefer to remain so, at least for the time being and perhaps for the rest of my life.",
        "When we had no computers, we had no programming problem either. When we had a few computers, we had a mild programming problem. Confronted with machines a million times as powerful, we are faced with a gigantic programming problem.",
        "The problems of the real world are primarily those you are left with when you refuse to apply their effective solutions.",
        "When I came back from Munich, it was September, and I was Professor of Mathematics at the Eindhoven University of Technology. Later I learned that I had been the Department's third choice, after two numerical analysts had turned the invitation down; the decision to invite me had not been an easy one, on the one hand because I had not really studied mathematics, and on the other hand because of my sandals, my beard and my \"arrogance\" (whatever that may be).",
        "In the wake of the Cultural Revolution and now of the recession I observe a mounting pressure to co-operate and to promote \"teamwork\". For its anti-individualistic streak, such a drive is of course highly suspect; some people may not be so sensitive to it, but having seen the Hitlerjugend in action suffices for the rest of your life to be very wary of \"team spirit\". Very.",
        "I mean, if 10 years from now, when you are doing something quick and dirty, you suddenly visualize that I am looking over your shoulders and say to yourself \"Dijkstra would not have liked this\", well, that would be enough immortality for me.",
        "Elegance is not a dispensable luxury but a quality that decides between success and failure.",
        "Industry suffers from the managerial dogma that for the sake of stability and continuity, the company should be independent of the competence of individual employees. Hence industry rejects any methodological proposal that can be viewed as making intellectual demands on its work force. Since in the US the influence of industry is more pervasive than elsewhere, the above dogma hurts American computing science most. The moral of this sad part of the story is that as long as computing science is not allowed to save the computer industry, we had better see to it that the computer industry does not kill computing science.",
        "The required techniques of effective reasoning are pretty formal, but as long as programming is done by people that don't master them, the software crisis will remain with us and will be considered an incurable disease. And you know what incurable diseases do: they invite the quacks and charlatans in, who in this case take the form of Software Engineering gurus.",
        "It is not the task of the University to offer what society asks for, but to give what society needs.",
        "There are very different programming styles. I tend to see them as Mozart versus Beethoven. When Mozart started to write, the composition was finished. He wrote the manuscript and it was 'aus einem Guss' (from one cast). In beautiful handwriting, too. Beethoven was a doubter and a struggler who started writing before he finished the composition and then glued corrections onto the page. In one place he did this nine times. When they peeled them, the last version proved identical to the first one.",
        "In short, I suggest that the programmer should continue to understand what he is doing, that his growing product remains firmly within his intellectual grip. It is my sad experience that this suggestion is repulsive to the average experienced programmer, who clearly derives a major part of his professional excitement from not quite understanding what he is doing. In this streamlined age, one of our most undernourished psychological needs is the craving for Black Magic and apparently the automatic computer can satisfy this need for the professional software engineer, who is secretly enthralled by the gigantic risks he takes in his daring irresponsibility. For his frustrations I have no remedy......",
        "This is generally true: any sizeable piece of program, or even a complete program package, is only a useful tool that can be used in a reliable fashion, provided that the documentation pertinent for the user is much shorter than the program text. If any machine or system requires a very thick manual, its usefulness becomes for that very circumstance subject to doubt!",
        "Computer Science is no more about computers than astronomy is about telescopes.",
        "Go To statement considered harmful"
    ],
    "Gordon Moore": [
        "The complexity for minimum component costs has increased at a rate of roughly a factor of two per year... Certainly over the short term this rate can be expected to continue, if not to increase. Over the longer term, the rate of increase is a bit more uncertain, although there is no reason to believe it will not remain nearly constant for at least 10 years. That means by 1975, the number of components per integrated circuit for minimum cost will be 65,000. I believe that such a large circuit can be built on a single wafer.",
        "With engineering, I view this year's failure as next year's opportunity to try it again. Failures are not something to be avoided. You want to have them happen as quickly as you can so you can make progress rapidly.",
        "The technology at the leading edge changes so rapidly that you have to keep current after you get out of school. I think probably the most important thing is having good fundamentals.",
        "I had no idea this was going to be an accurate prediction, but amazingly enough instead of 10 [years] doubling, we got nine over the 10 years, but still followed pretty well along the curve.",
        "If the auto industry advanced as rapidly as the semiconductor industry, a Rolls Royce would get half a million miles per gallon, and it would be cheaper to throw it away than to park it."
    ],
    "Grace Hopper": [
        "We must include in any language with which we hope to describe complex data-processing situations the capability for describing data. We must also include a mechanism for determining the priorities to be applied to the data. These priorities are not fixed and are indicated in many cases by the data. Thus we must have a language and a structure that will take care of the data descriptions and priorities, as well as the operations we wish to perform. If we think seriously about these problems, we find that we cannot work with procedures alone, since they are sequential. We need to define the problem instead of the procedures. The Language Structures Group of the Codasyl Committee has been studying the structure of languages that can be used to describe data-processing problems. The Group started out by trying to design a language for stating procedures, but soon discovered that what was really required was a description of the data and a statement of the relationships between the data sets. The Group has since begun writing an algebra of processes, the background for a theory of data processing. Clearly, we must break away from the sequential and not limit the computers. We must state definitions and provide for priorities and descriptions of data. We must state relationships, not procedures.",
        "From then on, when anything went wrong with a computer, we said it had bugs in it.",
        "At present, we're putting on paper a lot of stuff that never needed to be on paper. We do need to keep the records. But there isn't any reason for printing them. The next generation growing up with the computers will change that.",
        "It's easier to ask forgiveness than it is to get permission.",
        "I handed my passport to the immigration officer, and he looked at it and looked at me and said, \"What are you?\"",
        "In total desperation, I called over to the engineering building, and I said, \"Please cut off a nanosecond and send it over to me.\"",
        "At the end of about a week, I called back and said, \"I need something to compare this to. Could I please have a microsecond?\"",
        "There's something you learn in your first boot-camp, or training camp: If they put you down somewhere with nothing to do, go to sleep — you don't know when you'll get any more.",
        "I had a running compiler and nobody would touch it. … they carefully told me, computers could only do arithmetic; they could not do programs.",
        "I've always been more interested in the future than in the past.",
        "I've received many honors and I'm grateful for them; but I've already received the highest award I'll ever receive, and that has been the privilege and honor of serving very proudly in the United States Navy.",
        "Life was simple before World War II. After that, we had systems.",
        "Humans are allergic to change. They love to say, \"We've always done it this way.\" I try to fight that. That's why I have a clock on my wall that runs counter-clockwise.",
        "We're flooding people with information. We need to feed it through a processor. A human must turn information into intelligence or knowledge. We've tended to forget that no computer will ever ask a new question.",
        "You manage things, you lead people. We went overboard on management and forgot about leadership. It might help if we ran the MBAs out of Washington.",
        "The wonderful thing about standards is that there are so many of them to choose from.",
        "A ship in port is safe; but that is not what ships are built for. Sail out to sea and do new things.",
        "To me programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge."
    ],
    "Grady Booch": [
        "Perhaps the greatest strength of an object-oriented approach to development is that it offers a mechanism that captures a model of the real world.",
        "The entire history of software engineering is that of the rise in levels of abstraction.",
        "The Uniﬁed Modeling Language (UML) is a general-purpose visual modeling language that is used to specify, visualize, construct, and document the artifacts of a software system. It captures decisions and understanding about systems that must be constructed. It is used to understand, design, browse, conﬁgure, maintain, and control information about such systems. It is intended for use with all development methods, lifecycle stages, application domains, and media. The modeling language is intended to unify past experience about modeling techniques and to incorporate current software best practices into a standard approach. UML includes semantic concepts, notation, and guidelines. It has static, dynamic, environmental, and organizational parts. It is intended to be supported by interactive visual modeling tools that have code generators and report writers. The UML speciﬁcation does not deﬁne a standard process but is intended to be useful with an iterative development process. It is intended to support most existing object-oriented development processes.",
        "As a noun, design is the named (although sometimes unnamable) structure or behavior of a system whose presence resolves or contributes to the resolution of a force or forces on that system. A design thus represents one point in a potential decision space. A design may be singular (representing a leaf decision) or it may be collective (representing a set of other decisions).",
        "The amateur software engineer is always in search of magic, some sensational method or tool whose application promises to render software development trivial. It is the mark of the professional software engineer to know that no such panacea exist.",
        "Model Driven Architecture is a style of enterprise application development and integration, based on using automated tools to build system independent models and transform them into efficient implementations.",
        "The function of good software is to make the complex appear to be simple.",
        "In the early days of modern computing - the 40s, 50s and 60s - computing was a priesthood. Only a few were allowed to commune directly with the machine; all others would give their punched card offerings to the anointed, who would in turn genuflect before their card readers and perform their rituals amid the flashing of lights, the clicking of relays, and the whirring of fans and motors. If the offering was well-received, the anointed would call the communicants forward and in solemn silence hand them printed manuscripts, whose signs and symbols would be studied with fevered brow.",
        "A physician, a civil engineer, and a computer scientist were arguing about what was the oldest profession in the world. The physician remarked, \"Well, in the Bible, it says that God created Eve from a rib taken out of Adam. This clearly required surgery, and so I can rightly claim that mine is the oldest profession in the world.\" The civil engineer interrupted, and said, \"But even earlier in the book of Genesis, it states that God created the order of the heavens and the earth from out of the chaos. This was the first and certainly the most spectacular application of civil engineering. Therefore, fair doctor, you are wrong: mine is the oldest profession in the world.\" The computer scientist leaned back in her chair, smiled, and then said confidently, \"Ah, but who do you think created the chaos?\"",
        "Structured design does not scale up well for extremely complex systems, and this method is largely inappropriate for use with object-based and object-oriented programming languages.",
        "Philosophy and cognitive science have contributed to the advancement of the object model. The idea that the world could be viewed either in terms of objects or processes was a Greek innovation, and in the seventeenth century, we find Descartes observing that humans naturally apply an object-oriented view of the world. In the twentieth century, Rand expanded upon these themes in her philosophy of objectivist epistemology. More recently, Minsky has proposed a model of human intelligence in which he considers the mind to be organized as a society of otherwise mindless agents. Minsky argues that only through the cooperative behavior of these agents do we find what we call intelligence.",
        "Object-oriented programming is a method of implementation in which programs are organized as cooperative collections of objects, each of which represents an instance of some class, and whose classes are all members of a hierarchy of classes united via inheritance relationships.",
        "Object-oriented analysis is a method of analysis that examines requirements from the perspective of the classes and objects found in the vocabulary of the problem domain.",
        "Object-oriented design is a method of design encompassing the process of object-oriented decomposition and a notation for depicting both logical and physical as well as static and dynamic models of the system under design.",
        "The object-oriented paradigm is useful when building software systems where there is a hierarchy defined as a ranking or ordering of abstractions.",
        "Typically, a subclass augments or redefines the existing structure and behavior of its superclasses.",
        "As Cox points out, \"Without inheritance, every class would be a free-standing unit, each developed from the ground up. Different classes would bear no relationship with one another, since the developer of each provides methods in whatever manner he Chooses. Any consistency across classes is the result of discipline on the part of the programmers. Inheritance makes it possible to define new software in the Same way we introduce any concept to a newcomer, by comparing it with something that is already familiar.\"",
        "An operation is some action one object performs upon another in order to elicit a reaction.",
        "Ultimately, discovery and invention are both problems of classification, and classification is fundamentally a problem of finding sameness. When we classify, we seek to group things that have a common structure or exhibit a common behavior.",
        "If an abstraction is a kind of some other abstraction, or if it is exactly equal to the sum of its components, then inheritance is a better approach",
        "The class Dog is functionally cohesive if its semantics embrace the behavior of a dog, the whole dog, and nothing but the dog.",
        "In object-oriented analysis, we seek to model the world by identifying the classes and objects that form the vocabulary of the problem domain, and in object-oriented design, we invent the abstractions and mechanisms that provide the behavior that this model requires.",
        "Whereas object-oriented analysis typically focuses upon one specific problem at a time, domain analysis seeks to identify the classes and objects that are common to all applications within a given domain, such as missile avionics systems, compilers, or accounting software.",
        "Every software system needs to have a simple yet powerful organizational philosophy (think of it as the software equivalent of a sound bite that describes the system's architecture)... [A] step in [the] development process is to articulate this architectural framework, so that we might have a stable foundation upon which to evolve the system's function points.",
        "A class is a set of objects that share a common structure and a common behavior",
        "In a quality object-oriented software system, you will find many classes that speak the language of the domain expert",
        "Good people with a good process will outperform good people with no process every time.",
        "Is object-oriented technology mature enough upon which to build indus­trial-strength systems? Absolutely. Does this technology scale? Indeed. Is it the sole technology worth considering? No way. Is there some better technology we should be using in the future? Possibly, but I am clueless as to what that might be. It is dangerous to make predictions, especially in a discipline that changes so rapidly, but one thing I can say with confidence is that I have seen the future, and it is object-oriented.",
        "The entire history of software engineering is that of the rise in levels of abstraction."
    ],
    "Hal Abelson": [
        "If I have not seen as far as others, it is because giants were standing on my shoulders.",
        "Applicants must also have extensive knowledge of Unix, although they should have sufficiently good programming taste to not consider this an achievement",
        "In the Middle Ages people built cathedrals, where the whole town would get together and make a thing that's greater than any individual person could do and the society would kind of revel in that. We don't do that as much anymore, but in a sense this is kind of like building a cathedral.",
        "Anything which uses science as part of its name isn't: political science, creation science, computer science."
    ],
    "John Backus": [
        "For twenty years programming languages have been steadily progressing toward their present condition of obesity; as a result, the study and invention of programming languages has lost much of its excitement. Instead, it is now the province of those who prefer to work with thick compendia of details rather than wrestle with new ideas. Discussions about programming languages often resemble medieval debates about the number of angels that can dance on the head of a pin instead of exciting contests between fundamentally differing concepts. Many creative computer scientists have retreated from inventing languages to inventing tools for describing them. Unfortunately, they have been largely content to apply their elegant new tools to studying the warts and moles of existing languages.",
        "Von Neumann languages do not have useful properties for reasoning about programs. Axiomatic and denotational semantics are precise tools for describing and understanding conventional programs, but they only talk about them and cannot alter their ungainly properties. Unlike von Neumann languages, the language of ordinary algebra is suitable both for stating its laws and for transforming an equation into its solution, all within the \"language.\""
    ],
    "John von Neumann": [
        "I think that it is a relatively good approximation to truth — which is much too complicated to allow anything but approximations — that mathematical ideas originate in empirics. But, once they are conceived, the subject begins to live a peculiar life of its own and is … governed by almost entirely aesthetical motivations. In other words, at a great distance from its empirical source, or after much \"abstract\" inbreeding, a mathematical subject is in danger of degeneration. Whenever this stage is reached the only remedy seems to me to be the rejuvenating return to the source: the reinjection of more or less directly empirical ideas.",
        "Any one who considers arithmetical methods of producing random digits is, of course, in a state of sin. For, as has been pointed out several times, there is no such thing as a random number — there are only methods to produce random numbers, and a strict arithmetic procedure of course is not such a method.",
        "A large part of mathematics which becomes useful developed with absolutely no desire to be useful, and in a situation where nobody could possibly know in what area it would become useful; and there were no general indications that it ever would be so. By and large it is uniformly true in mathematics that there is a time lapse between a mathematical discovery and the moment when it is useful; and that this lapse of time can be anything from 30 to 100 years, in some cases even more; and that the whole system seems to function without any direction, without any reference to usefulness, and without any desire to do things which are useful.",
        "The sciences do not try to explain, they hardly even try to interpret, they mainly make models. By a model is meant a mathematical construct which, with the addition of certain verbal interpretations, describes observed phenomena. The justification of such a mathematical construct is solely and precisely that it is expected to work.",
        "It is exceptional that one should be able to acquire the understanding of a process without having previously acquired a deep familiarity with running it, with using it, before one has assimilated it in an instinctive and empirical way… Thus any discussion of the nature of intellectual effort in any field is difficult, unless it presupposes an easy, routine familiarity with that field. In mathematics this limitation becomes very severe.",
        "When we talk mathematics, we may be discussing a secondary language built on the primary language of the nervous system.",
        "It is just as foolish to complain that people are selfish and treacherous as it is to complain that the magnetic field does not increase unless the electric field has a curl. Both are laws of nature.",
        "You should call it entropy, for two reasons. In the first place your uncertainty function has been used in statistical mechanics under that name, so it already has a name. In the second place, and more important, no one really knows what entropy really is, so in a debate you will always have the advantage.",
        "You don't have to be responsible for the world that you're in.",
        "The calculus was the first achievement of modern mathematics and it is difficult to overestimate its importance. I think it defines more unequivocally than anything else the inception of modern mathematics; and the system of mathematical analysis, which is its logical development, still constitutes the greatest technical advance in exact thinking.",
        "With four parameters I can fit an elephant, and with five I can make him wiggle his trunk.",
        "You wake me up early in the morning to tell me that I'm right? Please wait until I'm wrong.",
        "If one has really technically penetrated a subject, things that previously seemed in complete contrast, might be purely mathematical transformations of each other.",
        "If people do not believe that mathematics is simple, it is only because they do not realize how complicated life is.",
        "There probably is a God. Many things are easier to explain if there is than if there isn't.",
        "If you say why not bomb them tomorrow, I say why not today? If you say today at five o' clock, I say why not one o' clock?"
    ],
    "Ken Thompson": [
        "You can't trust code that you did not totally create yourself. (Especially code from companies that employ people like me.) No amount of source-level verification or scrutiny will protect you from using untrusted code.",
        "The press, television, and movies make heroes of vandals by calling them whiz kids. ... There is obviously a cultural gap. The act of breaking into a computer system has to have the same social stigma as breaking into a neighbor's house. It should not matter that the neighbor's door is unlocked.",
        "We have persistent objects, they're called files.",
        "If you want to go somewhere, goto is the best way to get there.",
        "The X server has to be the biggest program I've ever seen that doesn't do anything for you.",
        "Hi, this is Ken. What's the root password?",
        "It does everything Unix does only less reliably.",
        "I am a very bottom-up thinker. If you give me the right kind of Tinker Toys, I can imagine the building. I can sit there and see primitives and recognize their power to build structures a half mile high, if only I had just one more to make it functionally complete. I can see those kinds of things.",
        "I think the major good idea in Unix was its clean and simple interface: open, close, read, and write.",
        "Unix was a very small, understandable OS, so people could change it at their will. It would run itself—you could type \"go\" and in a few minutes it would recompile itself. You had total control over the whole system. So it was very beneficial to a lot of people, especially at universities, because it was very hard to teach computing from an IBM end-user point of view. Unix was small, and you could go through it line by line and understand exactly how it worked. That was the origin of the so-called Unix culture.",
        "In Plan 9 and Inferno, the key ideas are the protocol for communicating between components and the simplification and extension of particular concepts. In Plan 9, the key abstraction is the file system—anything you can read and write and select by names in a hierarchy—and the protocol exports that abstraction to remote channels to enable distribution. Inferno works similarly, but it has a layer of language interaction above it through the Limbo language interface—which is like Java, but cleaner I think.",
        "I view Linux as something that's not Microsoft — a backlash against Microsoft, no more and no less. I don't think it will be very successful in the long run. I've looked at the source and there are pieces that are good and pieces that are not. A whole bunch of random people have contributed to this source, and the quality varies drastically. My experience and some of my friends' experience is that Linux is quite unreliable. Microsoft is really unreliable but Linux is worse. In a non-PC environment, it just won't hold up. If you're using it on a single box, that's one thing. But if you want to use Linux in firewalls, gateways, embedded systems, and so on, it has a long way to go.",
        "Anything new will have to come along with the type of revolution that came along with Unix. Nothing was going to topple IBM until something came along that made them irrelevant. I'm sure they have the mainframe market locked up, but that's just irrelevant. And the same thing with Microsoft: until something comes along that makes them irrelevant, the entry fee is too difficult and they won't be displaced.",
        "I think the open software movement (and Linux in particular) is laudable.",
        "I do believe that in a race, it is naive to think Linux has a hope of making a dent against Microsoft starting from way behind with a fraction of the resources and amateur labor. (I feel the same about Unix.)",
        "I must say the Linux community is a lot nicer than the Unix community. A negative comment on Unix would warrent death threats. With Linux, it is like stirring up a nest of butterflies.",
        "I would try out the [C++] language [at AT&T] as it was being developed and make comments on it. It was part of the work atmosphere there. And you'd write something and then the next day it wouldn't work because the language changed. It was very unstable for a very long period of time. At some point, I said, no, no more. In an interview I said exactly that, that I didn't use it because it wouldn't stay still for two days in a row. When Stroustrup read the interview he came screaming into my room about how I was undermining him and what I said mattered and I said it was a bad language.",
        "I used to [look at the Linux source code], for Plan 9. They were always ahead of us—they just had massively more resources to deal with hardware. So when we'd run across a piece of hardware, I'd look at the Linux drivers for it and write Plan 9 drivers for it. Now I have no reason to look at it. I run Linux. And I occasionally look at code, but rarely, so I can't really tell whether the quality has gotten better or not [since 1999]. But certainly the reliability has gotten better.",
        "When the three of us [Thompson, Rob Pike, and Robert Griesemer] got started, it was pure research. The three of us got together and decided that we hated C++. [laughter] ... [Returning to Go,] we started off with the idea that all three of us had to be talked into every feature in the language, so there was no extraneous garbage put into the language for any reason."
    ],
    "Konrad Zuse": [
        "The rattling of the relays of the Z4 was the only interesting thing to be experienced in Zurich's night life!"
    ],
    "Larry Page": [
        "The Star Trek computer doesn't seem that interesting. They ask it random questions, it thinks for a while. I think we can do better than that.",
        "I have a simple algorithm, which is, wherever you see paid researchers instead of grad students, that's not where you want to be doing research.",
        "If you look at things like Google Now also. Maybe you want to just have [a question] answered for you before you ask it.",
        "It's hard to keep things moving. And that's always a big trick. I think for me, the key is setting really big goals. And, you know, with YouTube, I think we've had tremendous leadership, both with the founders and now with Salar, who's been running it.",
        "Sometimes it’s important to wake up and stop dreaming. When a really great dream shows up, grab it"
    ],
    "Larry Wall": [
        "Although the Perl Slogan is There's More Than One Way to Do It, I hesitate to make 10 ways to do something.",
        "And don't tell me there isn't one bit of difference between null and space, because that's exactly how much difference there is.",
        "Because . doesn't match \\n. [\\0-\\377] is the most efficient way to match everything currently. Maybe \\e should match everything. And \\E would of course match nothing.",
        "Besides, REAL computers have a rename() system call.",
        "Chip Salzenberg sent me a complete patch to add System V IPC (msg, sem and shm calls), so I added them. If that bothers you, you can always undefine them in config.sh.",
        "I don't know if it's what you want, but it's what you get.",
        "I dunno, I dream in Perl sometimes...",
        "Piet van Oostrum: I find this a nice feature but it is not according to the documentation. Or is it a BUG? Larry Wall: Let's call it an accidental feature.",
        "If you want to program in C, program in C. It's a nice language. I use it occasionally...",
        "I know it's weird, but it does make it easier to write poetry in perl.",
        "I'm sure that that could be indented more readably, but I'm scared of the awk parser.",
        "It is, of course, written in Perl. Translation to C is left as an exercise for the reader.",
        "It's all magic.",
        "It's documented in The Book, somewhere...",
        "It won't be covered in the book. The source code has to be useful for something, after all...",
        "Dan Smith: I've tried (in vi) 'g/[a-z]\\n[a-z]/s//_/'...but that doesn't cut it. Any ideas? (I take it that it may be a two-pass sort of solution). Larry Wall: In the first pass, install perl.",
        "Let's say the docs present a simplified view of reality...",
        "Let us be charitable, and call it a misleading feature",
        "Perl programming is an *empirical* science!",
        "Randal said it would be tough to do in sed. He didn't say he didn't understand sed. Randal understands sed quite well. Which is why he uses Perl.",
        "Real programmers can write assembly code in any language.",
        "The only disadvantage I see is that it would force everyone to get Perl. Horrors.",
        "There are probably better ways to do that, but it would make the parser more complex. I do, occasionally, struggle feebly against complexity...",
        "There are still some other things to do, so don't think if I didn't fix your favorite bug that your bug report is in the bit bucket. (It may be, but don't think it.",
        "Though I'll admit readability suffers slightly...",
        "What about WRITING it first and rationalizing it afterwards?",
        "You want it in one line? Does it have to fit in 80 columns?",
        "All language designers are arrogant. Goes with the territory...",
        "Besides, including <std_ice_cubes.h> is a fatal error on machines that don't have it yet. Bad language design, there...",
        "Besides, it's good to force C programmers to use the toolbox occasionally.",
        "Hey, I had to let awk be better at *something*...",
        "If I allowed 'next $label' then I'd also have to allow 'goto $label', and I don't think you really want that...",
        "In general, if you think something isn't in Perl, try it out, because it usually is.",
        "I think it's a new feature. Don't tell anyone it was an accident.",
        "It's there as a sop to former Ada programmers.",
        "I won't mention any names, because I don't want to get sun4's into trouble...",
        "Just don't create a file called -rf.",
        "No, I'm not going to explain it. If you can't figure it out, you didn't want to know anyway...",
        "Perl itself is usually pretty good about telling you what you shouldn't do.",
        "Sorry. My testing organization is either too small, or too large, depending on how you look at it.",
        "There are many times when you want it to ignore the rest of the string just like atof() does. Oddly enough, Perl calls atof(). How convenient.",
        "We all agree on the necessity of compromise. We just can't agree on when it's necessary to compromise.",
        "And I don't like doing silly things (except on purpose).",
        "But you have to allow a little for the desire to evangelize when you think you have good news.",
        "Down that path lies madness. On the other hand, the road to hell is paved with melting snowballs.",
        "If I don't document something, it's usually either for a good reason, or a bad reason. In this case it's a good reason.",
        "If you want to see useful Perl examples, we can certainly arrange to have comp.lang.misc flooded with them, but I don't think that would help the advance of civilization.",
        "Just don't compare it with a real language, or you'll be unhappy...",
        "There ain't nothin' in this world that's worth being a snot over.",
        "Unix is like a toll road on which you have to stop every 50 feet to pay another nickel. But hey! You only feel 5 cents poorer each time.",
        "What is the sound of Perl? Is it not the sound of a wall that people have stopped banging their heads against?",
        "You have to admit that it's difficult to misplace the Perl sources.",
        "Doing linear scans over an associative array is like trying to club someone to death with a loaded Uzi.",
        "Well, enough clowning around. Perl is, in intent, a cleaned up and summarized version of that wonderful semi-natural language known as 'Unix'.",
        "Anyway, there's plenty of room for doubt. It might seem easy enough, but computer language design is just like a stroll in the park. Jurassic Park, that is.",
        "Lisp has all the visual appeal of oatmeal with fingernail clippings mixed in.",
        "I don't like your I-can-use-anything-as-an-adjective attitude.",
        "I want to see people using Perl to glue things together creatively, not just technically but also socially.",
        "The whole history of computers is rampant with cheerleading at best and bigotry at worst.",
        "If someone stinks, view it as a reason to help them, not a reason to avoid them.",
        "As usual, I'm overstating the case to knock a few neurons loose, but the truth is usually somewhere in the muddle, uh, middle.",
        "Odd that we think definitions are definitive.",
        "I don't like this official/unofficial distinction. It sound, er, officious.",
        "If you write something wrong enough, I'll be glad to make up a new witticism just for you.",
        "So far we've managed to avoid turning Perl into APL.",
        "Not that I have anything much against redundancy. But I said that already.",
        "They can always run stderr through uniq.",
        "I'd put my money where my mouth is, but my mouth keeps moving.",
        "Of course, I reserve the right to make wholly stupid changes to Perl if I think they improve the language.",
        "Call me bored, but don't call me boring.",
        "I think $[ is more like a coelacanth than a mastadon.",
        "We question most of the mantras around here periodically, in case you hadn't noticed.",
        "That could certainly be done, but I don't want to fall into the Forth trap, where every running Forth implementation is really a different language.",
        "Tcl long ago fell into the Forth trap, and is now trying desperately to extricate itself (with some help from Sun's marketing department).",
        "The whole intent of Perl 5's module system was to encourage the growth of Perl culture rather than the Perl core.",
        "Randal can write one-liners again. Everyone is happy, and peace spreads over the whole Earth.",
        "Life gets boring, someone invents another necessity, and once again we turn the crank on the screwjack of progress hoping that nobody gets screwed.",
        "No prisoner's dilemma here. Over the long term, symbiosis is more useful than parasitism. More fun, too. Ask any mitochondria.",
        "P.S. Perl's master plan (or what passes for one) is to take over the world like English did. Er, *as* English did...",
        "You can prove anything by mentioning another computer language.",
        "I think you didn't get a reply because you used the terms 'correct' and 'proper', neither of which has much meaning in Perl culture.",
        "I'm sure a mathematician would claim that 0 and 1 are both very interesting numbers.",
        "True, it returns ' ' for false, but ' ' is an even more interesting number than 0.",
        "Any false value is gonna be fairly boring in Perl, mathematicians notwithstanding.",
        "We didn't put in ^^ because then we'd have to keep telling people what it means, and then we'd have to keep telling them why it doesn't short circuit. :-/",
        "Anybody want a binary telemetry frame editor written in Perl?",
        "Perhaps I'm missing the gene for making enemies.",
        "Perl has a long tradition of working around compilers.",
        "Personally, I like to defiantly split my infinitives.",
        "Real theology is always rather shocking to people who already think they know what they think. I'm still shocked myself.",
        "The computer should be doing the hard work. That's what it's paid to do, after all.",
        "The following two statements are usually both true: There's not enough documentation. There's too much documentation.",
        "Of course, this being Perl, we could always take both approaches.",
        "The random quantum fluctuations of my brain are historical accidents that happen to have decided that the concepts of dynamic scoping and lexical scoping are orthogonal and should remain that way.",
        "At many levels, Perl is a 'diagonal' language.",
        "I'm serious about thinking through all the possibilities before we settle on anything. All things have the advantages of their disadvantages, and vice versa.",
        "Part of language design is perturbing the proposed feature in various directions to see how it might generalize in the future.",
        "Sometimes we choose the generalization. Sometimes we don't.",
        "I wouldn't ever write the full sentence myself, but then, I never use goto either.",
        "It's appositival, if it's there. And it doesn't have to be there. And it's really obvious that it's there when it's there.",
        "Oh, get ahold of yourself. Nobody's proposing that we parse English.",
        "As with all the other proposals, it's basically just a list of words. You can deal with that...",
        "I hope I'm not getting so famous that I can't think out load [sic] anymore.",
        "It would be possible to optimize some forms of goto, but I haven't bothered.",
        "A 'goto' in Perl falls into the category of hard things that should be possible, not easy things that should be easy.",
        "How do Crays and Alphas handle the POSIX problem?",
        "Well, that's more-or-less what I was saying, though obviously addition is a little more cosmic than the bitwise operators.",
        "You tell it that it's indicative by appending $!. That's why we made $! such a short variable name, after all.",
        "The choice of approaches could be made the responsibility of the programmer.",
        "As someone pointed out, you could have an attribute that says 'optimize the heck out of this routine', and your definition of heck would be a parameter to the optimizer.",
        "If you're going to define a shortcut, then make it the base [sic] darn shortcut you can.",
        "It is my job in life to travel all roads, so that some may take the road less travelled, and others the road more travelled, and all have a pleasant day.",
        "It's getting harder and harder to think out loud. One of these days someone's gonna go off and kill Thomas a'Becket for me...",
        "I was about to say, 'Avoid fame like the plague,' but you know, they can cure the plague with penicillin these days.",
        "But the possibility of abuse may be a good reason for leaving capabilities out of other computer languages, it's not a good reason for leaving capabilities out of Perl.",
        "Oh, wait, that was Randal...nevermind...",
        "P.S. I suppose I really should be nicer to people today, considering I'll be singing in Billy Graham's choir tonight...",
        "Magically turning people's old scalar contexts into list contexts is a recipe for several kinds of disaster.",
        "And we can always supply them with a program that makes identical files into links to a single file.",
        "I wasn't recommending that we make the links for them, only provide them with the tools to do so if they want to take the gamble (or the gambol).",
        "This has been planned for some time. I guess we'll just have to find someone with an exceptionally round tuit.",
        "I surely do hope that's a syntax error.",
        "Anyway, my money is still on use strict vars . . .",
        "If you remove stricture from a large Perl program currently, you're just installing delayed bugs, whereas with this feature, you're installing an instant bug that's easily fixed. Whoopee.",
        "I don't think it's worth washing hogs over.",
        "It's certainly easy to calculate the average attendance for Perl conferences.",
        "Tcl tends to get ported to weird places like routers.",
        "Historically Tcl has always stored all intermediate results as strings. (With 8.0 they're rethinking that. Of course, Perl rethought that from the start.)",
        "Just don't make the '9' format pack/unpack numbers...",
        "I think that's easier to read. Pardon me. Less difficult to read.",
        "To ordinary folks, conversion is not always automatic. It's something that may or may not require explicit assistance. See Billy Graham.",
        "Well, you can implement a Perl peek() with unpack('P',...). Once you have that, there's only security through obscurity.",
        "It may be possible to get this condition from within Perl if a signal handler runs at just the wrong moment. Another point for Chip...",
        "As pointed out in a followup, Real Perl Programmers prefer things to be visually distinct.",
        "The Harvard Law states: Under controlled conditions of light, temperature, humidity, and nutrition, the organism will do as it damn well pleases.",
        "That should probably be written: no !@#$%^&*:@!semicolon",
        "That gets us out of deciding how to spell Reg[eE]xp?|RE . . . Of course, then we have to decide what ref $re returns...",
        "I was trying not to mention backtracking. Which, of course, means that yours is 'righter' than mine, in a theoretical sense.",
        "Not that I'm against sneaking some notions into people's heads upon occasion. (Or blasting them in outright.)",
        "Wow, I'm being shot at from both sides. That means I *must* be right.",
        "You don't have to wait--you can have it in 5.004_54 or so.",
        "There's something to be said for returning the whole syntax tree.",
        "It's not really a rule--it's more like a trend.",
        "Double *sigh*. _04 is going onto thousands of CDs even as we speak, so to speak.",
        "The code also assumes that it's difficult to misspell 'a' or 'b'.",
        "Well, hey, let's just make everything into a closure, and then we'll have our general garbage collector, installed by 'use less memory'.",
        "People who understand context would be steamed to have someone else dictating how they can call it.",
        "For the sake of argument I'll ignore all your fighting words.",
        "Think of prototypes as a funny markup language--the interpretation is left up to the rendering engine.",
        "The way these things go, there are probably 6 or 8 kludgey ways to do it, and a better way that involves rethinking something that hasn't been rethunk yet."
    ],
    "Linus Torvalds": [
        "I'm doing a (free) operating system (just a hobby, won't be big and professional like gnu) for 386(486) AT clones.",
        "Do you pine for the nice days of minix-1.1, when men were men and wrote their own device drivers? […] I can (well, almost) hear you asking yourselves \"why?\". Hurd will be out in a year (or two, or next month, who knows), and I've already got minix.",
        "Your job is being a professor and researcher: That's one hell of a good excuse for some of the brain-damages of Minix.",
        "Portability is for people who cannot write new programs.",
        "Well, with a subject like this, I'm afraid I'll have to reply. Apologies to minix-users who have heard enough about linux anyway. I'd like to be able to just \"ignore the bait\", but … time for some serious flamefesting!",
        "Well, I probably won't get too good grades even without you: I had an argument (completely unrelated – not even pertaining to OS's) with the person here at the university that teaches OS design. I wonder when I'll learn :)",
        "No. That's it. The cool name, that is. We worked very hard on creating a name that would appeal to the majority of people, and it certainly paid off: thousands of people are using linux just to be able to say \"OS/2? Hah. I've got Linux. What a cool name\". 386BSD made the mistake of putting a lot of numbers and weird abbreviations into the name, and is scaring away a lot of people just because it sounds too technical.",
        "When you say, \"I wrote a program that crashed Windows,\" people just stare at you blankly and say, \"Hey, I got those with the system, for free.\"",
        "If you need more than 3 levels of indentation, you're screwed anyway, and should fix your program.",
        "You know you're brilliant, but maybe you'd like to understand what you did 2 weeks from now.",
        "An infinite number of monkeys typing into GNU emacs would never make a good program.",
        "It's a bird … it's a plane … no, it's KernelMan, faster than a speeding bullet, to your rescue. Doing new kernel versions in under 5 seconds flat …",
        "The main reason there are no raw devices [in Linux] is that I personally think that raw devices are a stupid idea.",
        "Some people have told me they don't think a fat penguin really embodies the grace of Linux, which just tells me they have never seen an angry penguin charging at them in excess of 100 mph. They'd be a lot more careful about what they say if they had.",
        "Only wimps use tape backup: real men just upload their important stuff on ftp, and let the rest of the world mirror it ;)",
        "If you still don't like it, that's OK: that's why I'm boss. I simply know better than you do.",
        "See, you not only have to be a good coder to create a system like Linux, you have to be a sneaky bastard too ;-)",
        "Making Linux GPL'd was definitely the best thing I ever did.",
        "I'd like to say that I knew this would happen, that it's all part of the plan for world domination.",
        "Note that nobody reads every post in linux-kernel. In fact, nobody who expects to have time left over to actually do any real kernel work will read even half. Except Alan Cox, but he's actually not human, but about a thousand gnomes working in under-ground caves in Swansea. None of the individual gnomes read all the postings either, they just work together really well.",
        "Talk is cheap. Show me the code.",
        "I'm a bastard. I have absolutely no clue why people can ever think otherwise. Yet they do. People think I'm a nice guy, and the fact is that I'm a scheming, conniving bastard who doesn't care for any hurt feelings or lost hours of work, if it just results in what I consider to be a better system. And I'm not just saying that. I'm really not a very nice person. I can say \"I don't care\" with a straight face, and really mean it.",
        "To kind of explain what Linux is, you have to explain what an operating system is. And the thing about an operating system is that you're never ever supposed to see it. Because nobody really uses an operating system; people use programs on their computer. And the only mission in life of an operating system is to help those programs run. So an operating system never does anything on its own; it's only waiting for the programs to ask for certain resources, or ask for a certain file on the disk, or ask to connect to the outside world. And then the operating system steps in and tries to make it easy for people to write programs.",
        "In short: just say NO TO DRUGS, and maybe you won't end up like the Hurd people.",
        "Hey, that's not a bug, that's a feature! You know what the most complex piece of engineering known to man in the whole solar system is? Guess what – it's not Linux, it's not Solaris, and it's not your car. It's you. And me. And think about how you and me actually came about – not through any complex design. Right. \"Sheer luck\". Well, sheer luck, and: • Free availability and crosspollination through sharing of \"source code\", although biologists call it DNA. • A rather unforgiving user environment, that happily replaces bad versions of us with better working versions and thus culls the herd (biologists often call this \"survival of the fittest\"). • Massive undirected parallel development (\"trial and error\"). I'm deadly serious: we humans have never been able to replicate something more complicated than what we ourselves are, yet natural selection did it without even thinking. Don't underestimate the power of survival of the fittest. And don't ever make the mistake that you can design something better than what you get from ruthless massively parallel trial-and-error with a feedback cycle. That's giving your intelligence much too much credit. Quite frankly, Sun is doomed. And it has nothing to do with their engineering practices or their coding style.",
        "Yeah. And as Linus once said: most numerical problems today in pure CPU cycles are actually 3D games. … It's not \"incorrect\" to say that you want the result faster, even if that result doesn't match your theoretical models.",
        "Once you realize that documentation should be laughed at, peed upon, put on fire, and just ridiculed in general, THEN, and only then, have you reached the level where you can safely read it and try to use it to actually implement a driver.",
        "Personally, I'm not interested in making device drivers look like user-level. They aren't, they shouldn't be, and microkernels are just stupid.",
        "I allege that SCO is full of it.",
        "Those that can, do. Those that can't, complain.",
        "Really, I'm not out to destroy Microsoft. That will just be a completely unintentional side effect.",
        "Modern PCs are horrible. ACPI is a complete design disaster in every way. But we're kind of stuck with it. If any Intel people are listening to this and you had anything to do with ACPI, shoot yourself now, before you reproduce.",
        "They are smoking crack.",
        "There are literally several levels of SCO being wrong. And even if we were to live in that alternate universe where SCO would be right, they'd still be wrong.",
        "The NIH syndrome (Not Invented Here) is a disease.",
        "Anybody who tells me I can't use a program because it's not open source, go suck on rms. I'm not interested. 99% of that I run tends to be open source, but that's my choice, dammit.",
        "Nobody should start to undertake a large project. You start with a small trivial project, and you should never expect it to get large. If you do, you'll just overdesign and generally think it is more important than it likely is at that stage. Or worse, you might be scared away by the sheer size of the work you envision. So start small, and think about the details. Don't think about some big picture and fancy design. If it doesn't solve some fairly immediate need, it's almost certainly over-designed. And don't expect people to jump in and help you. That's not how these things work. You need to get something half-way useful first, and then others will say \"hey, that almost works for me\", and they'll get involved in the project.",
        "My name is Linus Torvalds and I am your god.",
        "Oh fuck. If I kill this guy, I'll have millions of nerds on my case.",
        "My personal opinion of Mach is not very high. Frankly, it's a piece of crap. It contains all the design mistakes you can make, and even managed to make up a few of its own.",
        "You see. I don't think any new thoughts. I think thoughts that other people have thought, and I rearrange them. But Sara, she thinks thoughts that never were before.",
        "Most days I wake up thinking I'm the luckiest bastard alive.",
        "I'm personally convinced that computer science has a lot in common with physics. Both are about how the world works at a rather fundamental level. The difference, of course, is that while in physics you're supposed to figure out how the world is made up, in computer science you create the world. Within the confines of the computer, you're the creator. You get to ultimately control everything that happens. If you're good enough, you can be God. On a small scale.",
        "A lot of people still like Solaris, but I'm in active competition with them, and so I hope they die.",
        "Which mindset is right? Mine, of course. People who disagree with me are by definition crazy. (Until I change my mind, when they can suddenly become upstanding citizens. I'm flexible, and not black-and-white.)",
        "Don't bother. Bram doesn't know what he's talking about.",
        "It was such a relief to program in user mode for a change. Not having to care about the small stuff is wonderful.",
        "I chose 1000 originally partly as a way to make sure that people that assumed HZ was 100 would get a swift kick in the pants.",
        "I'm always right. This time I'm just even more right than usual.",
        "The fact that ACPI was designed by a group of monkeys high on LSD, and is some of the worst designs in the industry obviously makes running it at any point pretty damn ugly.",
        "I personally just encourage people to switch to KDE. This \"users are idiots, and are confused by functionality\" mentality of Gnome is a disease. If you think your users are idiots, only idiots will use it. I don't use Gnome, because in striving to be simple, it has long since reached the point where it simply doesn't do what I need it to do. Please, just tell people to use KDE.",
        "For example, the GPLv2 in no way limits your use of the software. If you're a mad scientist, you can use GPLv2'd software for your evil plans to take over the world (\"Sharks with lasers on their heads!!\"), and the GPLv2 just says that you have to give source code back. And that's OK by me. I like sharks with lasers. I just want the mad scientists of the world to pay me back in kind. I made source code available to them, they have to make their changes to it available to me. After that, they can fry me with their shark-mounted lasers all they want.",
        "I claim that Mach people (and apparently FreeBSD) are incompetent idiots.",
        "I like colorized diffs, but let's face it, those particular color choices will make most people decide to pick out their eyes with a fondue fork. And that's not good. Digging in your eye-sockets with a fondue fork is strictly considered to be bad for your health, and seven out of nine optometrists are dead set against the practice. So in order to avoid a lot of blind git users, please apply this patch.",
        "EFI is this other Intel brain-damage (the first one being ACPI).",
        "I'm a huge believer in evolution (not in the sense that \"it happened\" – anybody who doesn't believe that is either uninformed or crazy, but in the sense \"the processes of evolution are really fundamental, and should probably be at least thought about in pretty much any context\").",
        "Dijkstra probably hates me.",
        "It's one of those rare \"perfect\" kernels. So if it doesn't happen to compile with your config (or it does compile, but then does unspeakable acts of perversion with your pet dachshund), you can rest easy knowing that it's all your own damn fault, and you should just fix your evil ways.",
        "Gcc is crap.",
        "Friends don't let friends use [gcc] \"-W\".",
        "I think people can generally trust me, but they can trust me exactly because they know they don't have to.",
        "Nobody actually creates perfect code the first time around, except me. But there's only one of me.",
        "If you have ever done any security work – and it did not involve the concept of \"network of trust\" – it wasn't security work, it was – masturbation. I don't know what you were doing. But trust me, it's the only way you can do security, it's the only way you can do development.",
        "So the whole \"We have a list and we're not telling you\" should tell you something. Don't you think that if Microsoft actually had some really foolproof patent, they'd just tell us and go, \"nyaah, nyaah, nyaah!\"?",
        "You try to claim that the GPLv3 causes \"More developers\", and that, my idiotic penpal, is just crazy talk that you made up.",
        "I don't ask for money. I don't ask for sexual favors. I don't ask for access to the hardware you design and sell. I just ask for the thing I gave you: source code that I can use myself.",
        "Controlling a laser with Linux is crazy, but everyone in this room is crazy in his own way. So if you want to use Linux to control an industrial welding laser, I have no problem with your using PREEMPT_RT.",
        "Is \"I hope you all die a painful death\" too strong?",
        "C++ is a horrible language. It's made more horrible by the fact that a lot of substandard programmers use it, to the point where it's much much easier to generate total and utter crap with it.",
        "C++ is in that inconvenient spot where it doesn't help make things simple enough to be truly usable for prototyping or simple GUI programming, and yet isn't the lean system programming language that C is that actively encourages you to use simple and direct constructs.",
        "I'm an egotistical bastard, and I name all my projects after myself. First Linux, now git.",
        "Me, I just don't care about proprietary software. It's not \"evil\" or \"immoral,\" it just doesn't matter. I think that Open Source can do better, and I'm willing to put my money where my mouth is by working on Open Source, but it's not a crusade – it's just a superior way of working together and generating code.",
        "I have an ego the size of a small planet, but I'm not _always_ right [...].",
        "It has nothing to do with dinosaurs. Good taste doesn't go out of style",
        "Your problem has nothing to do with git, and everything to do with emacs. And then you have the gall to talk about \"Unix design\" and not gumming programs together, when you yourself use the most gummed-up piece of absolute sh*t there is!",
        "The fact is, there aren't just two sides to any issue, there's almost always a range of responses, and \"it depends\" is almost always the right answer in any big question.",
        "Real quality means making sure that people are proud of the code they write, that they're involved and taking it personally.",
        "Security people are often the black-and-white kind of people that I can't stand. I think the OpenBSD crowd is a bunch of masturbating monkeys, in that they make such a big deal about concentrating on security to the point where they pretty much admit that nothing else matters to them.",
        "It's what I call \"mental masturbation\", when you engage is some pointless intellectual exercise that has no possible meaning.",
        "Sometimes \"pi = 3.14\" is (a) infinitely faster than the \"correct\" answer and (b) the difference between the \"correct\" and the \"wrong\" answer is meaningless. And this is why I get upset when somebody dismisses performance issues based on \"correctness\". The thing is, some specious value of \"correctness\" is often irrelevant because it doesn't matter. While performance almost always matters. And I absolutely detest the fact that people so often dismiss performance concerns so readily.",
        "I think Leopard is a much better system [than Windows Vista] … but OS X in some ways is actually worse than Windows to program for. Their file system is complete and utter crap, which is scary.",
        "And what's the Internet without the rick-roll?",
        "Crying that it's an application bug is like crying over the speed of light: you should deal with reality, not what you wish reality was.",
        "Theory and practice sometimes clash. And when that happens, theory loses. Every single time.",
        "The thing that has always disturbed me about O_DIRECT is that the whole interface is just stupid, and was probably designed by a deranged monkey on some serious mind-controlling substances. [*] [*] In other words, it's an Oracleism.",
        "I may make jokes about Microsoft at times, but at the same time, I think the Microsoft hatred is a disease.",
        "There are \"extremists\" in the free software world, but that's one major reason why I don't call what I do \"free software\" any more. I don't want to be associated with the people for whom it's about exclusion and hatred.",
        "Your code is shit.. your argument is shit.",
        "Standards are paper. I use paper to wipe my butt every day. That's how much that paper is worth.",
        "Every time I see some piece of medical research saying that caffeine is good for you, I high-five myself. Because I'm going to live forever.",
        "Toto, I don't think we're talking white-socks-and-sandals any more.",
        "Why don't we write code that just works? Or absent a \"just works\" set of patches, why don't we revert to code that has years of testing? This kind of \"I broke things, so now I will jiggle things randomly until they unbreak\" is not acceptable. [...] Don't just make random changes. There really are only two acceptable models of development: \"think and analyze\" or \"years and years of testing on thousands of machines\". Those two really do work.",
        "We're not masturbating around with some research project. We never were. Even when Linux was young, the whole and only point was to make a *usable* system. It's why it's not some crazy drug-induced microkernel or other random crazy thing.",
        "Somebody is trying to kill all the kernel developers.",
        "Obsessing about things is important, and things really do matter, but if you can't let go of them, you'll end up crazy.",
        "I'm not sentimental. Good riddance.",
        "Of course, I'd also suggest that whoever was the genius who thought it was a good idea to read things ONE F*CKING BYTE AT A TIME with system calls for each byte should be retroactively aborted. Who the f*ck does idiotic things like that? How did they noty die as babies, considering that they were likely too stupid to find a tit to suck on?",
        "People say that you should not micro-optimize. But if what you love is micro-optimization... that's what you should do.",
        "I like offending people, because I think people who get offended should be offended.",
        "Nvidia, fuck you!",
        "I wish everybody was as nice as I am.",
        "I started Linux as a desktop operating system. And it's the only area where Linux hasn't completely taken over. That just annoys the hell out of me.",
        "I realize that lawyers are brought up (probably from small children) to think that \"technically true\" is what matters, but when you make public PR statements, they should be more than \"technically\" true. They should be honest. There's a big f*cking difference.",
        "But this is definitely another of those \"This is our most desperate hour. Help me, Al-biwan Ke-Viro, you're my only hope\" issues. Al? Please don't make me wear that golden bikini.",
        "I hope I won't end up having to hunt you all down and kill you in your sleep.",
        "Whoever came up with \"hold the shift key for eight seconds to turn on 'your keyboard is buggered' mode\" should be shot.",
        "There aren't enough swear-words in the English language, so now I'll have to call you perkeleen vittupää just to express my disgust and frustration with this crap.",
        "That's the spirit. Greg has taught you well. You have controlled your fear. Now, release your anger. Only your hatred can destroy me. Come to the dark side, Sarah. We have cookies.",
        "Because if you want me to \"act professional\", I can tell you that I'm not interested. I'm sitting in my home office wearing a bathrobe. The same way I'm not going to start wearing ties, I'm *also* not going to buy into the fake politeness, the lying, the office politics and backstabbing, the passive aggressiveness, and the buzzwords. Because THAT is what \"acting professionally\" results in: people resort to all kinds of really nasty things because they are forced to act out their normal urges in unnatural ways.",
        "XML is crap. Really. There are no excuses. XML is nasty to parse for humans, and it's a disaster to parse even for computers. There's just no reason for that horrible crap to exist.",
        "Lookie here, your compiler does some absolutely insane things with the spilling, including spilling a *constant*. For chrissake, that compiler shouldn't have been allowed to graduate from kindergarten. We're talking \"sloth that was dropped on the head as a baby\" level retardation levels here.",
        "I don't respect people unless I think they deserve the respect. There are people who think that respect is something that should be given, and I happen to be one of the people who is perfectly happy saying no; respect should be earned. And without being earned, you don't get it. It's really that simple.",
        "One of the things, none of the distributions have ever done right is application packaging [...] making binaries for linux desktop applications is a major fucking pain in the ass.",
        "On the internet nobody can hear you being subtle.",
        "I don’t care about you.",
        "I am a lazy person, which is why I like open source, for other people to do work for me.",
        "Christ, people. Learn C, instead of just stringing random characters together until it compiles (with warnings).",
        "Get rid of it. And I don't *ever* want to see that shit again.",
        "If 386BSD had been available when I started on Linux, Linux would probably never had happened.",
        "Software is like sex; it's better when it's free.",
        "The memory management on the PowerPC can be used to frighten small children.",
        "OK, I admit it. I was just a front-man for the real fathers of Linux, the Tooth Fairy and Santa Claus.",
        "Guess what? Wheels have been round for a really long time, and anybody who \"reinvents\" the new wheel is generally considered a crackpot. It turns out that \"round\" is simply a good form for a wheel to have. It may be boring, but it just tends to roll better than a square, and \"hipness\" has nothing what-so-ever to do with it.",
        "I don't doubt at all that virtualization is useful in some areas. What I doubt rather strongly is that it will ever have the kind of impact that the people involved in virtualization want it to have.",
        "Now, most of you are probably going to be totally bored out of your minds on Christmas day, and here's the perfect distraction. Test 2.6.15-rc7. All the stores will be closed, and there's really nothing better to do in between meals.",
        "First off, I'm actually perfectly well off. I live in a good-sized house, with a nice yard, with deer occasionally showing up and eating the roses (my wife likes the roses more, I like the deer more, so we don't really mind). I've got three kids, and I know I can pay for their education. What more do I need? The thing is, being a good programmer actually pays pretty well; being acknowledged as being world-class pays even better. I simply didn't need to start a commercial company. And it's just about the least interesting thing I can even imagine. I absolutely hate paperwork. I couldn't take care of employees if I tried. A company that I started would never have succeeded – it's simply not what I'm interested in! So instead, I have a very good life, doing something that I think is really interesting, and something that I think actually matters for people, not just me. And that makes me feel good.",
        "So LSM stays in. No ifs, buts, maybes or anything else. When I see the security people making sane arguments and agreeing on something, that will change. Quite frankly, I expect hell to freeze over before that happens, and pigs will be nesting in trees. But hey, I can hope.",
        "So I would not be surprised if the globbing libraries, for example, will do NFD-mangling in order to glob \"correctly\", so even programs ported from real Unix might end up getting pathnames subtly changed into NFD as part of some hot library-on-library action with UTF hackery inside."
    ],
    "Martin Fowler": [
        "People also underestimate the time they spend debugging. They underestimate how much time they can spend chasing a long bug. With testing, I know straight away when I added a bug. That lets me fix the bug immediately, before it can crawl off and hide. There are few things more frustrating or time wasting than debugging. Wouldn't it be a hell of a lot quicker if we just didn't create the bugs in the first place?",
        "Transparency is valuable, but while many things can be made transparent in distributed objects, performance isn't usually one of them.",
        "Refactoring is a disciplined technique for restructuring an existing body of code, altering its internal structure without changing its external behavior. Its heart is a series of small behavior preserving transformations. Each transformation (called a 'refactoring') does little, but a sequence of transformations can produce a significant restructuring. Since each refactoring is small, it's less likely to go wrong. The system is also kept fully working after each small refactoring, reducing the chances that a system can get seriously broken during the restructuring.",
        "One of the things I've been trying to do is look for simpler or rules underpinning good or bad design. I think one of the most valuable rules is avoid duplication. \"Once and only once\" is the Extreme Programming phrase.",
        "Often designers do complicated things that improve the capacity on a particular hardware platform when it might actually be cheaper to buy more hardware.",
        "Modeling Principle: Models are not right or wrong; they are more or less useful.",
        "It is commonly said that a pattern, however it is written, has four essential parts: a statement of the context where the pattern is useful, the problem that the pattern addresses, the forces that play in forming a solution, and the solution that resolves those forces. … it supports the definition of a pattern as \"a solution to a problem in a context\", a definition that [unfortunately] fixes the bounds of the pattern to a single problem-solution pair",
        "The definition I use for pattern is an idea that has been useful in one practical context and will probably be useful in others",
        "The second problem [with using UML for the purposes of this book] is that the Unified Modeling Language concentrates on implementation modeling rather than conceptual modeling",
        "When you find you have to add a feature to a program, and the program's code is not structured in a convenient way to add the feature, first refactor the program to make it easy to add the feature, then add the feature.",
        "Any fool can write code that a computer can understand. Good programmers write code that humans can understand.",
        "Refactoring (noun) : a change made to the internal structure of software to make it easier to understand and cheaper to modify without changing the observable behavior of the software. To refactor (verb) : to restructure software by applying a series of refactorings without changing the observable behavior of the software.",
        "Often you'll see the same three or four data items together in lots of places: fields in a couple of classes, parameters in many method signatures. Bunches of data that hang around together really ought to be made into their own object.",
        "When you feel the need to write a comment, first try to refactor the code so that any comment becomes superfluous.",
        "The key is to test the areas that you are most worried about going wrong. That way you get the most benefit for your testing effort. It is better to write and run incomplete tests than not to run complete tests",
        "Steve Mellor and I independently came up with a characterization of the three modes in which people use the UML: sketch, blueprint, and programming language. By far the most common of the three, at least to my biased eye, is UML as sketch. In this usage, developers use the UML to help communicate some aspects of a system. As with blueprints, you can use sketches in a forward-engineering or reverse-engineering direction. Forward engineering draws a UML diagram before you write code, while reverse engineering builds a UML diagram from existing code in order to help understand it.",
        "The key books about object-oriented graphical modeling languages appeared between 1988 and 1992. Leading figures included Grady Booch [Booch,OOAD]; Peter Coad [Coad, OOA], [Coad, OOD]; Ivar Jacobson (Objectory) [Jacobson, OOSE]; Jim Odell [Odell]; Jim Rumbaugh (OMT) [Rumbaugh, insights], [Rumbaugh, OMT]; Sally Shlaer and Steve Mellor [Shlaer and Mellor, data], [Shlaer and Mellor, states] ; and Rebecca Wirfs-Brock (Responsibility Driven Design) [Wirfs-Brock].",
        "Graphical design notations have been with us for a while... their primary value is in communication and understanding. A good diagram can often help communicate ideas about a design, particularly when you want to avoid a lot of details. Diagrams can also help you understand either a software system or a business process . As part of a team trying to figure out something, diagrams both help understanding and communicate that understanding throughout a team. Although they aren't, at least yet, a replacement for textual programming languages, they are a helpful assistant... Of these graphical notations, the UML's importance comes from its wide use and standardization within the OO development community. The UML has become not only the dominant graphical notation within the OO world but also a popular technique in non-OO circles.",
        "Comprehensiveness is the enemy of comprehensibility"
    ],
    "Niklaus Wirth": [
        "Software gets slower faster than hardware gets faster.",
        "In our profession, precision and perfection are not a dispensable luxury, but a simple necessity.",
        "Reliable and transparent programs are usually not in the interest of the designer.",
        "As a matter of fact, the adaptability of a program to changes in its objectives (often called maintainability) and to changes in its environment (nowadays called portability) can be measured primarily in terms of the degree to which it is neatly structured.",
        "But active programming consists of the design of new programs, rather than contemplation of old programs.",
        "Clearly, programming courses should teach methods of design and construction, and the selected examples should be such that a gradual development can be nicely demonstrated.",
        "During the process of stepwise refinement, a notation which is natural to the problem in hand should be used as long as possible.",
        "Experience shows that the success of a programming course critically depends on the choice of these examples.",
        "In the practical world of computing, it is rather uncommon that a program, once it performs correctly and satisfactorily, remains unchanged forever.",
        "Programming is usually taught by examples."
    ],
    "Paul Graham": [
        "Architects know that some kinds of design problems are more personal than others. One of the cleanest, most abstract design problems is designing bridges. There your job is largely a matter of spanning a given distance with the least material. The other end of the spectrum is designing chairs. Chair designers have to spend their time thinking about human butts.",
        "The best thing software can be is easy, but the way to do this is to get the defaults right, not to limit users' choices.",
        "Software has to be designed by hackers who understand design, not designers who know a little about software. If you can't design software as well as implement it, don't start a startup.",
        "At every period of history, people have believed things that were just ridiculous, and believed them so strongly that you risked ostracism or even violence by saying otherwise. If our own time were any different, that would be remarkable. As far as I can tell it isn't.",
        "If you try to solve a hard problem, the question is not whether you will use a powerful enough language, but whether you will (a) use a powerful language, (b) write a de facto interpreter for one, or (c) yourself become a human compiler for one.",
        "As a rule of thumb, the more qualifiers there are before the name of a country, the more corrupt the rulers. A country called The Socialist People's Democratic Republic of X is probably the last place in the world you'd want to live.",
        "The world seemed cruel and boring, and I'm not sure which was worse.",
        "When you tread water, you lift yourself up by pushing water down. Likewise, in any social hierarchy, people unsure of their own position will try to emphasize it by maltreating those they think rank below. I've read that this is why poor whites in the United States are the group most hostile to blacks.",
        "Why do people move to suburbia? To have kids! So no wonder it seemed boring and sterile. The whole place was a giant nursery, an artificial town created explicitly for the purpose of breeding children.",
        "Nerds serve two masters. They want to be popular, certainly, but they want even more to be smart. And popularity is not something you can do in your spare time, not in the fiercely competitive environment of an American secondary school.",
        "While the nerds were being trained to get the right answers, the popular kids were being trained to please.",
        "If you leave a bunch of eleven-year-olds to their own devices, what you get is Lord of the Flies.",
        "The other thing that's different about the real world [compared to high school] is that it's much larger. In a large enough pool, even the smallest minorities can achieve a critical mass if they clump together.",
        "Nerds aren't losers. They're just playing a different game, and a game much closer to the one played in the real world.",
        "A programming language is for thinking of programs, not for expressing programs you've already thought of.",
        "The most important thing is to be able to think what you want, not to say what you want.",
        "When those far removed from the creation of wealth -- undergraduates, reporters, politicians -- hear that the richest 5% of the people have half the total wealth, they tend to think injustice! An experienced programmer would be more likely to think is that all? The top 5% of programmers probably write 99% of the good software.",
        "I've seen occasional articles about how to manage programmers. Really there should be two articles: one about what to do if you are yourself a programmer, and one about what to do if you're not. And the second could probably be condensed into two words: give up.",
        "At any given time, there are only about ten or twenty places where hackers most want to work, and if you aren't one of them, you won't just have fewer great hackers, you'll have zero.",
        "Your teachers are always telling you [high school students] to behave like adults. I wonder if they'd like it if you did. You may be loud and disorganized, but you're very docile compared to adults.... Imagine the reaction of an FBI agent or taxi driver or reporter to being told they had to ask permission to go the bathroom, and only one person could go at a time.",
        "There's no switch inside you [high school students] that magically flips when you turn a certain age or graduate from some institution. You start being an adult when you decide to take responsibility for your life. You can do that at any age.",
        "It's not so important what you [high school students] work on, so long as you're not wasting your time. Work on things that interest you and increase your options, and worry later about which you'll take.",
        "The world changes fast, and the rate at which it changes is itself speeding up. In such a world it's not a good idea to have fixed plans.",
        "If I were back in high school and someone asked about my plans, I'd say that my first priority was to learn what the options were. You [high school students] don't need to be in a rush to choose your life's work. What you need to do is discover what you like. You have to work on stuff you like if you want to be good at what you do.",
        "There are few sources of energy so powerful as a procrastinating grad student.",
        "Google never did any advertising. They're like dealers; they sell the stuff, but they know better than to use it themselves.",
        "Competitors punch you in the jaw, but investors have you by the balls.",
        "Consulting is where product companies go to die.",
        "No matter what you work on, you're not working on everything else. So the question is not how to avoid procrastination, but how to procrastinate well. There are three variants of procrastination, depending on what you do instead of working on something: you could work on (a) nothing, (b) something less important, or (c) something more important. That last type, I'd argue, is good procrastination.",
        "The most dangerous form of procrastination is unacknowledged type-B procrastination [putting off important things to do unimportant things], because it doesn't feel like procrastination. You're \"getting things done.\" Just the wrong things.",
        "If you work on something you can finish in a day or two, you can expect to have a nice feeling of accomplishment fairly soon. If the reward is indefinitely far in the future, it seems less real.",
        "Another reason people don't work on big projects is, ironically, fear of wasting time. What if they fail? Then all the time they spent on it will be wasted. (In fact it probably won't be, because work on hard projects almost always leads somewhere.)",
        "I think the way to \"solve\" the problem of procrastination is to let delight pull you instead of making a to-do list push you.",
        "European public opinion will apparently tolerate people being fired in industries where they really care about performance. Unfortunately the only industry they care enough about so far is soccer.",
        "The first type of judgement is the type where judging you is the end goal... But in fact there is a second much larger class of judgements where judging you is only a means to something else.",
        "The more you realize that most judgements are greatly influenced by random, extraneous factors—that most people judging you are more like a fickle novel buyer than a wise and perceptive magistrate—the more you realize you can do things to influence the outcome.",
        "One thing that leads us astray here is that the selector seems to be in a position of power. That makes him seem like a judge. If you regard someone judging you as a customer instead of a judge, the expectation of fairness goes away. The author of a good novel wouldn't complain that readers were unfair for preferring a potboiler with a racy cover. Stupid, perhaps, but not unfair.",
        "Someone trying to live well would seem eccentrically abstemious in most of the US. That phenomenon is only going to become more pronounced. You can probably take it as a rule of thumb from now on that if people don't think you're weird, you're living badly.",
        "If you'd asked me as a kid how rich people became poor, I'd have said by spending all their money. That's how it happens in books and movies, because that's the colorful way to do it. But in fact the way most fortunes are lost is not through excessive expenditure, but through bad investments.",
        "The most dangerous way to lose time is not to spend it having fun, but to spend it doing fake work. When you spend time having fun, you know you're being self-indulgent. Alarms start to go off fairly quickly. If I woke up one morning and sat down on the sofa and watched TV all day, I'd feel like something was terribly wrong. ... But the same alarms don't go off on the days when I get nothing done, because I'm doing stuff that seems, superficially, like real work.",
        "Being mean makes you stupid. That's why I hate fights. You never do your best work in a fight, because fights are not sufficiently general. Winning is always a function of the situation and the people involved. You don't win fights by thinking of big ideas but by thinking of tricks that work in one particular case. And yet fighting is just as much work as thinking about real problems.",
        "Jessica and I have always worked hard to teach our kids not to be mean. We tolerate noise and mess and junk food, but not meanness.",
        "I actually worry a lot that as I get \"popular\" I'll be able to get away with saying stupider stuff than I would have dared say before. This sort of thing happens to a lot of people, and I would really like to avoid it."
    ],
    "Rasmus Lerdorf": [
        "I did not develop the PHP we know today. Dozens, if not hundreds of people, developed PHP. I was simply the first developer.",
        "I actually hate programming, but I love solving problems.",
        "I really don't like programming. I built this tool to program less so that I could just reuse code.",
        "PHP is about as exciting as your toothbrush. You use it every day, it does the job, it is a simple tool, so what? Who would want to read about toothbrushes?",
        "I was really, really bad at writing parsers. I still am really bad at writing parsers.",
        "We have things like protected properties. We have abstract methods. We have all this stuff that your computer science teacher told you you shouldn't be using. I don't care about this crap at all.",
        "There are people who actually like programming. I don't understand why they like programming.",
        "I'm not a real programmer. I throw together things until it works then I move on. The real programmers will say \"Yeah it works but you're leaking memory everywhere. Perhaps we should fix that.\" I’ll just restart Apache every 10 requests.",
        "I do care about memory leaks but I still don't find programming enjoyable.",
        "I don't know how to stop it, there was never any intent to write a programming language [...] I have absolutely no idea how to write a programming language, I just kept adding the next logical step on the way.",
        "For all the folks getting excited about my quotes. Here is another - Yes, I am a terrible coder, but I am probably still better than you :)",
        "I've never thought of PHP as more than a simple tool to solve problems.",
        "PHP is rarely the bottleneck.",
        "Ugly problems often require ugly solutions. Solving an ugly problem in a pure manner is bloody hard.",
        "PHP is just a hammer. Nobody has ever gotten rich making hammers.",
        "Back when PHP had less than 100 functions and the function hashing mechanism was strlen()"
    ],
    "Richard Hamming": [
        "The purpose of computing is insight, not numbers.",
        "Typing is no substitute for thinking.",
        "The only generally agreed upon definition of mathematics is \"Mathematics is what mathematicians do.\" [...] In the face of this difficulty [of defining \"computer science\"] many people, including myself at times, feel that we should ignore the discussion and get on with doing it. But as George Forsythe points out so well in a recent article*, it does matter what people in Washington D.C. think computer science is. According to him, they tend to feel that it is a part of applied mathematics and therefore turn to the mathematicians for advice in the granting of funds. And it is not greatly different elsewhere; in both industry and the universities you can often still see traces of where computing first started, whether in electrical engineering, physics, mathematics, or even business. Evidently the picture which people have of a subject can significantly affect its subsequent development. Therefore, although we cannot hope to settle the question definitively, we need frequently to examine and to air our views on what our subject is and should become.",
        "Without real experience in using the computer to get useful results the computer science major is apt to know all about the marvelous tool except how to use it. Such a person is a mere technician, skilled in manipulating the tool but with little sense of how and when to use it for its basic purposes.",
        "Indeed, one of my major complaints about the computer field is that whereas Newton could say, \"If I have seen a little farther than others, it is because I have stood on the shoulders of giants,\" I am forced to say, \"Today we stand on each other's feet.\" Perhaps the central problem we face in all of computer science is how we are to get to the situation where we build on top of the work of others rather than redoing so much of it in a trivially different way. Science is supposed to be cumulative, not almost endless duplication of the same kind of things.",
        "The Postulates of Mathematics Were Not on the Stone Tablets that Moses Brought Down from Mt. Sinai.",
        "The idea that theorems follow from the postulates does not correspond to simple observation. If the Pythagorean theorem were found to not follow from the postulates, we would again search for a way to alter the postulates until it was true. Euclid's postulates came from the Pythagorean theorem, not the other way around.",
        "Just as there are odors that dogs can smell and we cannot, as well as sounds that dogs can hear and we cannot, so too there are wavelengths of light we cannot see and flavors we cannot taste. Why then, given our brains wired the way they are, does the remark, \"Perhaps there are thoughts we cannot think,\" surprise you?",
        "The calculus is probably the most useful single branch of mathematics. ...I have found the ability to do simple calculus, easily and reliably, was the most valuable part of mathematics I ever learned.",
        "Understanding the methods of calculus is vital to the creative use of mathematics... Without this mastery the average scientist or engineer, or any other user of mathematics, will be perpetually stunted in development, and will at best be able to follow only what the textbooks say; with mastery, new things can be done, even in old, well-established fields.",
        "Probability plays a central role in many fields, from quantum mechanics to information theory, and even older fields use probability now that the presence of \"noise\" is officially admitted. The newer aspects of many fields start with the admission of uncertainty.",
        "Continuous distributions are basic to the theory of probability and statistics, and the calculus is necessary to handle them with any ease.",
        "Statistics should be taught early so that the concepts are absorbed by the student's flexible, adaptable mind before it is too late.",
        "Increasingly... the application of mathematics to the real world involves discrete mathematics... the nature of the discrete is often most clearly revealed through the continuous models of both calculus and probability. Without continuous mathematics, the study of discrete mathematics soon becomes trivial and very limited. ...The two topics, discrete and continuous mathematics, are both ill served by being rigidly separated.",
        "The methods of mathematics are the main topic of the course, not a long list of finished mathematical results with such highly polished proofs that the poor student can only marvel at the results, with no hope of understanding how mathematics is actually created by practicing mathematicians.",
        "You live in an age that is dominated by science and engineering. ...Thus if you wish to be effective in the world and to achieve the things that you want, it is necessary to understand both science and engineering (and those require mathematics).",
        "Any unwillingness to learn mathematics today can greatly restrict your possibilities tomorrow.",
        "Probability and statistics are now so obviously necessary tools for understanding many diverse things that we must not ignore them even for the average student.",
        "Calculus is the mathematics of change. ...Change is characteristic of the world.",
        "Probability is the mathematics of uncertainty. ...many modern theories have uncertainty built into their foundations. Thus learning to think in terms of probability is essential.",
        "Most mathematics books are filled with finished theorems and polished proofs, and to a surprising extent they ignore the methods used to create mathematics. It is as if you merely walked through a picture gallery and never told how to mix paints, how to compose pictures, or all the other \"tricks of the trade.\"",
        "In the face of almost infinite useful knowledge, we have adopted the strategy of \"information regeneration rather than information retrieval.\" ...most importantly, you should be able to generate the result you need even if no one has ever done it before you—you will not be dependent on the past to have done everything you will ever need in mathematics.",
        "The assumptions and definitions of mathematics and science come from our intuition, which is based ultimately on experience. They then get shaped by further experience in using them and are occasionally revised. They are not fixed for all eternity.",
        "If you expect to continue learning all your life, you will be teaching yourself much of the time. You must learn to learn, especially the difficult topic of mathematics.",
        "The beauty of mathematics often makes the subject matter much more attractive and easier to master.",
        "When a theory is sufficiently general to cover many fields of application, it acquires some \"truth\" from each of them. Thus... a positive value for generalization in mathematics.",
        "There is no agreed upon definition of mathematics, but there is widespread agreement that the essence of mathematics is extension, generalization, and abstraction... [which] often bring increased confidence in the results of a specific application, as well as new viewpoints.",
        "We are mainly interested in the processes... not... in presenting mathematics in its most abstract form. ...we will often begin with concrete forms and then exhibit the process of abstraction.",
        "Science and mathematics... have added little to our understanding of such things as Truth, Beauty, and Justice. There may be definite limits to the applicability of the scientific method.",
        "Mathematics, being very different from the natural languages, has its corresponding patterns of thought. Learning these patterns is much more important than any particular result... They are learned by the constant use of the language and cannot be taught in any other fashion.",
        "Theorems... record more complex patterns of thinking that once shown to be valid need not be repeated every time they are needed.",
        "Calculus systematically evades a great deal of numerical calculation.",
        "Faced with almost an infinity of details you cannot afford to deal constantly with the specific; you must learn to embrace more and more detail under the cover of generality.",
        "There is no unique, correct answer in most cases. It is a matter of taste, depending on the circumstances... and the particular age you live in. ...Gradually, you will develop your own taste, and along the way you may occasionally recognize that your taste may be the best one! It is the same as an art course.",
        "A central problem in teaching mathematics is to communicate a reasonable sense of taste—meaning often when to, or not to, generalize, abstract, or extend something you have just done.",
        "When you yourself are responsible for some new application in mathematics... then your reputation... and possibly even human lives, may depend on the results you predict. It is then the need for mathematical rigor will become painfully obvious to you. ...Mathematical rigor is the clarification of the reasoning used in mathematics. ...a closer examination of the numerous \"hidden assumptions\" is made. ...Over the years there has been a gradually rising standard of rigor; proofs that satisfied the best mathematicians of one generation have been found inadequate by the next generation. Rigor is not a yes-no property of a proof... it is a vague standard of careful treatment that is currently acceptable to a particular group.",
        "We do not always know what we are talking about. ...Troubles... can be made to arise whenever what is being said includes itself—a self-referral situation.",
        "We intend to teach the doing of mathematics. The applications of these methods produce the results of mathematics (which usually is only what is taught)... There is also a deliberate policy to force you to think abstractly...it is only through abstraction that any reasonable amount of useful mathematics can be covered. There is simply too much known to continue the older approach of giving detailed results.",
        "It is easy to measure your mastery of the results via a conventional examination; it is less easy to measure your mastery of doing mathematics, of creating new (to you) results, and of your ability to surmount the almost infinite details to see the general situation.",
        "In the long run, the methods are the important part of the course. It is not enough to know the theory; you should be able to apply it.",
        "The applications of knowledge, especially mathematics, reveal the unity of all knowledge. In a new situation almost anything and everything you ever learned might be applicable, and the artificial divisions seem to vanish.",
        "This text is organized in the \"spiral\" for learning. A topic... is returned to again and again, each time higher up in the spiral. The first time around you may not be completely sure of what is going on, but on the repeated returns to the topic it should gradually become clear. This is necessary when the ideas are not simple but require a depth of understanding...",
        "Besides the theory there are a lot of small technical details that must be learned so well that you can recall them almost instantaneously, such as the trigonometric identities... put one part of the identity on one side of a 3 x 5 card and the other part on the other side. Using these flash cards you can, in the odd moments of your daily life, learn the mechanical parts of the course. ...for this kind of low-level material many short learning sessions are much more efficient than a few long, intense ones; but this is not necessarily true for larger ideas. ...most students will not use such trivial devices as flash cards; it seems to be beneath their dignity. They suffer accordingly.",
        "There are so many ways of being wrong and so few ways of being right that it is much more economical to study successes.",
        "Although textbooks (and professors) like to make definite statements indicating that they know what they are talking about, there is in fact a great deal of uncertainty and ambiguity in the world. ...we will not evade this question but rather explore (overexplore?) it. ...great progress is often made when what was long believed to be true is now seen to be perhaps not the whole truth. Thus the text often uses words... to cause you to think about the uncertainess and even the arbitrariness of much of our current conventions and definitions, to ponder about your acceptance of them.",
        "It is not easy to become an educated person.",
        "When you are famous it is hard to work on small problems. [...] The great scientists often make this error. They fail to continue to plant the little acorns from which the mighty oak trees grow. They try to get the big thing right off. And that isn't the way things go. So that is another reason why you find that when you get early recognition it seems to sterilize you. [...] The Institute for Advanced Study in Princeton, in my opinion, has ruined more good scientists than any institution has created, judged by what they did before they came and judged by what they did after.",
        "Most people like to believe something is or is not true. Great scientists tolerate ambiguity very well. They believe the theory enough to go ahead; they doubt it enough to notice the errors and faults so they can step forward and create the new replacement theory. If you believe too much you'll never notice the flaws; if you doubt too much you won't get started. It requires a lovely balance.",
        "I noticed the following facts about people who work with the door open or the door closed. I notice that if you have the door to your office closed, you get more work done today and tomorrow, and you are more productive than most. But 10 years later somehow you don't quite know what problems are worth working on; all the hard work you do is sort of tangential in importance. He who works with the door open gets all kinds of interruptions, but he also occasionally gets clues as to what the world is and what might be important.",
        "Probability is too important to be left to the experts. [...] The experts, by their very expert training and practice, often miss the obvious and distort reality seriously. [...] The desire of the experts to publish and gain credit in the eyes of their peers has distorted the development of probability theory from the needs of the average user. The comparatively late rise of the theory of probability shows how hard it is to grasp, and the many paradoxes show clearly that we, as humans, lack a well grounded intuition in the matter. Neither the intuition of the man in the street, nor the sophisticated results of the experts provides a safe basis for important actions in the world we live in.",
        "If the prior distribution, at which I am frankly guessing, has little or no effect on the result, then why bother; and if it has a large effect, then since I do not know what I am doing how would I dare act on the conclusions drawn?",
        "Since I was trying to teach \"style\" of thinking in science and engineering, and \"style\" is an art, I should therefore copy the methods of teaching used for the other arts—once the fundamentals have been learned. How to become a great painter cannot be taught in words... Art teachers usually let the advanced student paint, and then make suggestions... more or less as the points arise in the student's head—which is where learning is supposed to occur!",
        "Great results in science and engineering are \"bunched\" in the same person too often for success to be a matter of random luck.",
        "Teachers should prepare the student for the student's future, not for the teacher's past.",
        "Apparently an \"art\"—which almost by definition cannot be put into words—is probably best communicated by approaching it from many sides and doing so repeatedly, hoping thereby students will finally master enough of the art, or if you wish, style, to significantly increase their future contributions to society.",
        "The past is... much more uncertain—or even falsely reported—than is usually recognized.",
        "I am concerned with educating and not training you. ...Education is what, when, and why to do things. Training is how to do it. Either one without the other is not of much use. You might think education should precede training, but the kind of educating I am trying to do must be based on your past experiences and technical knowledge.",
        "Either you will be a leader, or a follower, and my goal is for you to be a leader.",
        "In science if you know what you are doing you should not be doing it. In engineering if you do not know what you are doing you should not be doing it. Of course, you seldom, if ever, see the pure state.",
        "All of engineering involves some creativity to cover the parts not known, and almost all of science includes some practical engineering to translate the abstractions into practice.",
        "Much of present science rests on engineering tools, and as time goes on, engineering seems to involve more and more of the science part. ...the two fields are growing together! ...and now there is not enough time to allow us the leisure which comes from separating the two fields.",
        "It is obvious: The past was once the future and the future will become the past.",
        "Often it is not physical limitations... but rather it is human made laws, habits, and organizational rules, regulations, personal egos, and inertia, which dominate the evolution of the future.",
        "It is probable that the future will be more limited by the slow evolution of the human animal and the corresponding human laws, social institutions, and organizations than it will be by the rapid evolution of technology.",
        "Unforeseen technological inventions can completely upset the most careful predictions.",
        "In a lifetime of many, many independent choices, small and large, a career with a vision will get you a distance proportional to n, while no vision will get you only the distance √n. ...the accuracy of the vision matters less than you suppose, getting anywhere is better than drifting, there are potentially many paths to greatness for you... No vision, not much of a future.",
        "In forming your plan for your future you need to distinguish three different questions: What is possible? What is likely to happen? What is desirable to have happen? In a sense the first is Science... The second is Engineering.. The third is ethics, morals, or... value judgements. ...you will probably have an idea of how to alter things to make the more desirable future occur ...having a vision is what tends to separate the leaders from the followers.",
        "The standard process of organizing knowledge into departments, and subderpartments, and further breaking it up into separate courses, tends to conceal the homogeneity of knowledge, and at the same time to omit much which falls between the courses.",
        "You ought to try to make significant contributions to humanity rather than just get along through life comfortably... the life of trying to achieve excellence in some area is in itself a worthy goal... A life without a struggle on your part to make yourself excellent is hardly a life worth living. ...a life without such a goal... is merely existing...",
        "Transmission through space (typically signaling) is the same as transmission through time (storage).",
        "The more complex the designed system the more field maintenance must be central to the final design. Only when field maintenance is part of the original design can it be safely controlled... This applies to both mechanical things and to human organizations.",
        "Somewhere in the mid-to-late 1950s in an address to the President and V.Ps of Bell Laboratories I said, \"At present we are doing 1 out of 10 experiments on the computers and 9 in the labs, but before I leave it will be 9 out of 10 on the machines\". They did not believe me... by now we do somewhere between 90% to 99% on the machines... And this trend will go on!",
        "We must not forget, in all the enthusiasm for computer simulations, occasionally we must look at Nature as She is.",
        "The people at the bottom do not have the larger, global view, but at the top they do not have the local view of all the details, many of which can often be very important, so either extreme gets poor results.",
        "An idea which arises in the field, based on the direct experience of the people doing the job, cannot get going in a centrally controlled system... The not invented here (NIH) syndrome is one of the major curses of our society...",
        "The Buddha told his disciples, \"Believe nothing, no matter where you read it, or who said it, no matter if I have said it, unless it agrees with your own reason and your own common sense\". I say the same to you—you must assume the responsibility for what you believe.",
        "Unfortunately... the ADA language was designed by experts, and it shows all the non-humane features you can expect from them. It is... a typical Computer Science hacking job—do not try and understand what you are doing, just get it running. As a result of this poor psychological design... although a government contract may specify the programming be in ADA, probably over 90% will be done in FORTRAN, debugged, tested, and then painfully, by hand, be converted to a poor ADA program, with a high probability of errors!",
        "The fundamentals of language are not understood to this day. ...Until we understand languages of communication involving humans as they are then it is unlikely many of our software problems will vanish.",
        "When you take a course in Euclidean geometry is not the teacher putting a... learning program into you? ...You enter the course and cannot do problems; the teacher puts into you a program and at the end of the course you can solve such problems. ...Are you sure you are not merely \"programmed\" in life by what by chance events happens to you?",
        "We are beginning to find not only is intelligence not adequately defined so arguments can be settled scientifically, but a lot of other associated words like, computer, learning, information, ideas, decisions, expert behavior—all are a bit fuzzy...",
        "This is the type of AI I am interested in—what can the human and machine do together, and not in the competition which can arise. ...There are doubts as to what fraction of the population can compete with computers, even with nice interactive prompting menus.",
        "The feeling of having free will is deep in us and we are reluctant to give it up for ourselves—but we are often willing to deny it to others!",
        "We constantly use the word \"simplify\", but its meaning depends on what you are going to do next, and there is no uniform definition.",
        "Perhaps thinking should be measured not by what you do but by how you do it."
    ],
    "Richard Stallman": [
        "While corporations dominate society and write the laws, each advance in technology is an opening for them to further restrict its users.",
        "It's stupidity. It's worse than stupidity: it's a marketing hype campaign.",
        "One reason you should not use web applications to do your computing is that you lose control. It's just as bad as using a proprietary program. Do your own computing on your own computer with your copy of a freedom-respecting program. If you use a proprietary program or somebody else's web server, you're defenceless. You're putty in the hands of whoever developed that software.",
        "I am a pessimist by nature. Many people can only keep on fighting when they expect to win. I'm not like that, I always expect to lose. I fight anyway, and sometimes I win.",
        "You know, if you were *really* going to starve, you'd be justified in writing proprietary software.",
        "The GNU GPL was not designed to be \"open source\".",
        "Isn't it ironic that the proprietary software developers call us communists? We are the ones who have provided for a free market, where they allow only monopoly. … if the users chooses this proprietary software package, he then falls into this monopoly for support … the only way to escape from monopoly is to escape from proprietary software, and that is what the free software movement is all about. We want you to escape and our work is to help you escape. We hope you will escape to the free world. The free world is the new continent in cyberspace that we have built so we can live here in freedom. It's impossible to live in freedom in the old world of cyberspace, where every program has its feudal lord that bullies and mistreats the users. So, to live in freedom we have to build a new continent. Because this is a virtual continent, it has room for everyone, and there are no immigration restrictions. And because there were never indigenous peoples in cyberspace, there is also no issue of taking away their land. So everyone is welcome in the free world, come to the free world, live with us in freedom. The free software movement aims for the liberation of cyberspace and everyone in it.",
        "Geeks like to think that they can ignore politics, you can leave politics alone, but politics won't leave you alone.",
        "People get the government their behavior deserves. People deserve better than that.",
        "Odious ideas are not entitled to hide from criticism behind the human shield of their believers' feelings.",
        "I don't have a problem with someone using their talents to become successful, I just don't think the highest calling is success. Things like freedom and the expansion of knowledge are beyond success, beyond the personal. Personal success is not wrong, but it is limited in importance, and once you have enough of it it is a shame to keep striving for that, instead of for truth, beauty, or justice.",
        "I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place.",
        "Fighting patents one by one will never eliminate the danger of software patents, any more than swatting mosquitoes will eliminate malaria.",
        "Prior art is as effective as US soldiers in Iraq: They control the ground they stand on, and nothing more. I used to say Vietnam, but, well, you know...",
        "People said I should accept the world. Bullshit! I don't accept the world.",
        "Value your freedom or you will lose it, teaches history. \"Don't bother us with politics,\" respond those who don't want to learn.",
        "I have not seen anyone assume that all the citizens of New York are guilty of murder, violence, robbery, perjury, or writing proprietary software.",
        "By the way, I hope you all know about the worldwide boycott of Coca Cola company for things like murdering union organizers in Colombia. See the site killercoke.org.",
        "Medical marijuana grower and activist Steve McWilliams killed himself last June, rather than face 6 months in prison with no marijuana to relieve his chronic pain. If you are ever in a situation like this, don't kill yourself in private. Make your death itself be a blow against the tyrant. Plead innocent; then kill yourself in the courtroom, with the jury and journalists watching, after defying the judge by shouting, \"I'm a medical marijuana grower. You were going to make those 12 honest citizens your tools for evil, but I will save them from you. May my death be on your conscience for as long as you live.\"",
        "Giving the Linus Torvalds Award to the Free Software Foundation is a bit like giving the Han Solo Award to the Rebel Fleet.",
        "He [somebody at Carnegie Mellon University] had betrayed us. But he didn't just do it to us. Chances are he did it to you too. [Pointing at member of audience.] And I think, mostly likely, he did it to you too. [Pointing at another member of audience.][Laughter] And he probably did it to you as well. [Pointing to third member of audience.] He probably did it to most of the people here in this room -- except a few, maybe, who weren't born yet in 1980. Because he had promised to refuse to cooperate with just about the entire population of the Planet Earth. He had signed a non-disclosure agreement.",
        "When I released GNU Emacs and people started using it, they started sending me improvements in the mail. So I would get a message with a bug fix, and a message with a new feature, and another bug fix, and another new feature, and another... and another... until they were pouring in on me so fast that just taking advantage of all of the help people were giving me was a big job. Microsoft doesn't have this problem.",
        "I was getting 8 to 10 orders [for tapes of Emacs] a month. And, if necessary, I could have lived on just that, because I've always lived cheaply. I live like a student, basically. And I like that, because it means that money is not telling me what to do. I can do what I think is important for me to do. It freed me to do what seemed worth doing. So make a real effort to avoid getting sucked into all the expensive lifestyle habits of typical Americans. Because if you do that, then people with the money will dictate what you do with your life. You won't be able to do what's really important to you.",
        "Thanks to Mr. Gates, we now know that an open Internet with protocols anyone can implement is communism; it was set up by that famous communist agent, the US Department of Defense.",
        "Would a dating service on the net be ‘frowned upon’ . . . ? I hope not. But even if it is, don’t let that stop you from notifying me via net mail if you start one.",
        "To have the choice between proprietary software packages, is being able to choose your master. Freedom means not having a master. And in the area of computing, freedom means not using proprietary software.",
        "We need to teach people to refuse to install non-free plug-ins; we need to teach people to care more about their long-term interest of freedom than their immediate desire to view a particular site.",
        "I didn't receive the DEC message, but I can't imagine I would have been bothered if I have. I get tons of uninteresting mail, and system announcements about babies born, etc. At least a demo MIGHT have been interesting.",
        "Hundreds of thousands of babies are born every day. While the whole phenomenon is menacing, one of them by itself is not newsworthy. Nor is it a difficult achievement--even some fish can do it. (Now, if you were a seahorse, it would be more interesting, since it would be the male that gave birth.) ...These birth announcements also spread the myth that having a baby is something to be proud of, which fuels natalist pressure, which leads to pollution, extinction of wildlife, poverty, and ultimately mass starvation.",
        "I have to explain that I'm not an anarchist – I have a pro-state gland.",
        "GNU, which stands for Gnu's Not Unix, is the name for the complete Unix-compatible software system which I am writing so that I can give it away free to everyone who can use it.",
        "To avoid horrible confusion, please pronounce the G in the word GNU when it is the name of this project.",
        "I consider that the golden rule requires that if I like a program I must share it with other people who like it. Software sellers want to divide the users and conquer them, making each user agree not to share with others. I refuse to break solidarity with other users in this way. I cannot in good conscience sign a nondisclosure agreement or a software license agreement. For years I worked within the Artificial Intelligence Lab to resist such tendencies and other inhospitalities, but eventually they had gone too far: I could not remain in an institution where such things are done for me against my will. So that I can continue to use computers without dishonor, I have decided to put together a sufficient body of free software so that I will be able to get along without any software that is not free. I have resigned from the AI lab to deny MIT any legal excuse to prevent me from giving GNU away.",
        "GNU is not in the public domain. Everyone will be permitted to modify and redistribute GNU, but no distributor will be allowed to restrict its further redistribution. That is to say, proprietary modifications will not be allowed. I want to make sure that all versions of GNU remain free.",
        "Once GNU is written, everyone will be able to obtain good system software free, just like air.",
        "Arrangements to make people pay for using a program, including licensing of copies, always incur a tremendous cost to society through the cumbersome mechanisms necessary to figure out how much (that is, which programs) a person must pay for. And only a police state can force everyone to obey them. Consider a space station where air must be manufactured at great cost: charging each breather per liter of air may be fair, but wearing the metered gas mask all day and all night is intolerable even if everyone can afford to pay the air bill. And the TV cameras everywhere to see if you ever take the mask off are outrageous. It's better to support the air plant with a head tax and chuck the masks. Copying all or parts of a program is as natural to a programmer as breathing, and as productive. It ought to be as free.",
        "It may be true that one can reach more microcomputer users with advertising. If this is really so, a business which advertises the service of copying and mailing GNU for a fee ought to be successful enough to pay for its advertising and more. This way, only the users who benefit from the advertising pay for it. On the other hand, if many people get GNU from their friends, and such companies don't succeed, this will show that advertising was not really necessary to spread GNU. Why is it that free market advocates don't want to let the free market decide this?",
        "If anything deserves a reward, it is social contribution. Creativity can be a social contribution, but only in so far as society is free to use the results. If programmers deserve to be rewarded for creating innovative programs, by the same token they deserve to be punished if they restrict the use of these programs.",
        "There is nothing wrong with wanting pay for work, or seeking to maximize one's income, as long as one does not use means that are destructive. But the means customary in the field of software today are based on destruction.",
        "Extracting money from users of a program by restricting their use of it is destructive because the restrictions reduce the amount and the ways that the program can be used. This reduces the amount of wealth that humanity derives from the program. When there is a deliberate choice to restrict, the harmful consequences are deliberate destruction. The reason a good citizen does not use such destructive means to become wealthier is that, if everyone did so, we would all become poorer from the mutual destructiveness. This is Kantian ethics; or, the Golden Rule. Since I do not like the consequences that result if everyone hoards information, I am required to consider it wrong for one to do so. Specifically, the desire to be rewarded for one's creativity does not justify depriving the world in general of all or part of that creativity.",
        "Restricting copying is not the only basis for business in software. It is the most common basis because it brings in the most money. If it were prohibited, or rejected by the customer, software business would move to other bases of organization which are now used less often. There are always numerous ways to organize any kind of business.",
        "Control over the use of one's ideas really constitutes control over other people's lives; and it is usually used to make their lives more difficult.",
        "The patent system was established to encourage inventors to disclose the details of their inventions. Its purpose was to help society rather than to help inventors. At the time, the life span of 17 years for a patent was short compared with the rate of advance of the state of the art. Since patents are an issue only among manufacturers, for whom the cost and effort of a license agreement are small compared with setting up production, the patents often do not do much harm. They do not obstruct most individuals who use patented products.",
        "The idea of copyright did not exist in ancient times, when authors frequently copied other authors at length in works of non-fiction. This practice was useful, and is the only way many authors' works have survived even in part. The copyright system was created expressly for the purpose of encouraging authorship. In the domain for which it was invented--books, which could be copied economically only on a printing press--it did little harm, and did not obstruct most of the individuals who read the books.",
        "All intellectual property rights are just licenses granted by society because it was thought, rightly or wrongly, that society as a whole would benefit by granting them. But in any particular situation, we have to ask: are we really better off granting such license? What kind of act are we licensing a person to do?",
        "The case of programs today is very different from that of books a hundred years ago. The fact that the easiest way to copy a program is from one neighbor to another, the fact that a program has both source code and object code which are distinct, and the fact that a program is used rather than read and enjoyed, combine to create a situation in which a person who enforces a copyright is harming society as a whole both materially and spiritually; in which a person should not do so regardless of whether the law enables him to.",
        "The paradigm of competition is a race: by rewarding the winner, we encourage everyone to run faster. When capitalism really works this way, it does a good job; but its defenders are wrong in assuming it always works this way. If the runners forget why the reward is offered and become intent on winning, no matter how, they may find other strategies--such as, attacking other runners. If the runners get into a fist fight, they will all finish late. Proprietary and secret software is the moral equivalent of runners in a fist fight.",
        "People with new ideas could distribute programs as freeware, asking for donations from satisfied users, or selling hand-holding services. I have met people who are already working this way successfully.",
        "We have already greatly reduced the amount of work that the whole society must do for its actual productivity, but only a little of this has translated itself into leisure for workers because much nonproductive activity is required to accompany productive activity. The main causes of this are bureaucracy and isometric struggles against competition. Free software will greatly reduce these drains in the area of software production. We must do this, in order for technical gains in productivity to translate into less work for us.",
        "Every decision a person makes stems from the person's values and goals. People can have many different goals and values; fame, profit, love, survival, fun, and freedom, are just some of the goals that a good person might have. When the goal is to help others as well as oneself, we call that idealism. My work on free software is motivated by an idealistic goal: spreading freedom and cooperation. I want to encourage free software to spread, replacing proprietary software that forbids cooperation, and thus make our society better.",
        "I figure that since proprietary software developers use copyright to stop us from sharing, we cooperators can use copyright to give other cooperators an advantage of their own: they can use our code.",
        "If you want to accomplish something in the world, idealism is not enough--you need to choose a method that works to achieve the goal. In other words, you need to be pragmatic.",
        "The programmers who write improvements to GCC (or Emacs, or Bash, or Linux, or any GPL-covered program) are often employed by companies or universities. When the programmer wants to return his improvements to the community, and see his code in the next release, the boss may say, \"Hold on there--your code belongs to us! We don't want to share it; we have decided to turn your improved version into a proprietary software product.\" Here the GNU GPL comes to the rescue. The programmer shows the boss that this proprietary software product would be copyright infringement, and the boss realizes that he has only two choices: release the new code as free software, or not at all. Almost always he lets the programmer do as he intended all along, and the code goes into the next release.",
        "The GNU GPL is not Mr. Nice Guy. It says \"no\" to some of the things that people sometimes want to do. There are users who say that this is a bad thing--that the GPL \"excludes\" some proprietary software developers who \"need to be brought into the free software community.\" But we are not excluding them from our community; they are choosing not to enter. Their decision to make software proprietary is a decision to stay out of our community. Being in our community means joining in cooperation with us; we cannot \"bring them into our community\" if they don't want to join. What we can do is offer them an inducement to join. The GNU GPL is designed to make an inducement from our existing software: \"If you will make your software free, you can use this code.\" Of course, it won't win 'em all, but it wins some of the time.",
        "If you focus your mind on the freedom and community that you can build by staying firm, you will find the strength to do it. \"Stand for something, or you will fall for nothing.\" And if cynics ridicule freedom, ridicule community...if \"hard nosed realists\" say that profit is the only ideal...just ignore them, and use copyleft all the same.",
        "While free software by any other name would give you the same freedom, it makes a big difference which name we use: different words convey different ideas.",
        "In 1998, some of the people in the free software community began using the term \"open source software\" instead of \"free software\" to describe what they do. The term \"open source\" quickly became associated with a different approach, a different philosophy, different values, and even a different criterion for which licenses are acceptable. The Free Software movement and the Open Source movement are today separate movements with different views and goals, although we can and do work together on some practical projects. The fundamental difference between the two movements is in their values, their ways of looking at the world. For the Open Source movement, the issue of whether software should be open source is a practical question, not an ethical one. As one person put it, \"Open source is a development methodology; free software is a social movement.\" For the Open Source movement, non-free software is a suboptimal solution. For the Free Software movement, non-free software is a social problem and free software is the solution.",
        "Radical groups in the 1960s developed a reputation for factionalism: organizations split because of disagreements on details of strategy, and then treated each other as enemies. Or at least, such is the image people have of them, whether or not it was true. The relationship between the Free Software movement and the Open Source movement is just the opposite of that picture. We disagree on the basic principles, but agree more or less on the practical recommendations. So we can and do work together on many specific projects. 'We don't think of the Open Source movement as an enemy. The enemy is proprietary software.",
        "We are not against the Open Source movement, but we don't want to be lumped in with them. We acknowledge that they have contributed to our community, but we created this community, and we want people to know this. We want people to associate our achievements with our values and our philosophy, not with theirs. We want to be heard, not obscured behind a group with different views. To prevent people from thinking we are part of them, we take pains to avoid using the word \"open\" to describe free software, or its contrary, \"closed\", in talking about non-free software.",
        "The term \"free software\" has an ambiguity problem: an unintended meaning, \"Software you can get for zero price,\" fits the term just as well as the intended meaning, \"software which gives the user certain freedoms.\" We address this problem by publishing a more precise definition of free software, but this is not a perfect solution; it cannot completely eliminate the problem. An unambiguously correct term would be better, if it didn't have other problems.",
        "The official definition of \"open source software,\" as published by the Open Source Initiative, is very close to our definition of free software; however, it is a little looser in some respects, and they have accepted a few licenses that we consider unacceptably restrictive of the users.",
        "The explanation for \"free software\" is simple--a person who has grasped the idea of \"free speech, not free beer\" will not get it wrong again.",
        "Today many people are switching to free software for purely practical reasons. That is good, as far as it goes, but that isn't all we need to do! Attracting users to free software is not the whole job, just the first step.",
        "At present, we have plenty of \"keep quiet\", but not enough freedom talk. Most people involved with free software say little about freedom--usually because they seek to be \"more acceptable to business.\" Software distributors especially show this pattern. Some GNU/Linux operating system distributions add proprietary packages to the basic free system, and they invite users to consider this an advantage, rather than a step backwards from freedom.",
        "To stop using the word \"free\" now would be a mistake; we need more, not less, talk about freedom. If those using the term \"open source\" draw more users into our community, that is a contribution, but the rest of us will have to work even harder to bring the issue of freedom to those users' attention. We have to say, \"It's free software and it gives you freedom!\"--more and louder than ever before.",
        "The Open Source Definition is clear enough, and it is quite clear that the typical non-free program does not qualify. So you would think that \"Open Source company\" would mean one whose products are free software (or close to it), right? Alas, many companies are trying to give it a different meaning.",
        "Over the years, many companies have contributed to free software development. Some of these companies primarily developed non-free software, but the two activities were separate; thus, we could ignore their non-free products, and work with them on free software projects. Then we could honestly thank them afterward for their free software contributions, without talking about the rest of what they did. We cannot do the same with these new companies, because they won't let us. These companies actively invite the public to lump all their activities together; they want us to regard their non-free software as favorably as we would regard a real contribution, although it is not one. They present themselves as \"open source companies,\" hoping that we will get a warm fuzzy feeling about them, and that we will be fuzzy-minded in applying it. This manipulative practice would be no less harmful if it were done using the term \"free software.\" But companies do not seem to use the term \"free software\" that way; perhaps its association with idealism makes it seem unsuitable. The term \"open source\" opened the door for this.",
        "Spreading the idea of freedom is a big job--it needs your help. That's why we stick to the term \"free software\" in the GNU Project, so we can help do that job. If you feel that freedom and community are important for their own sake--not just for the convenience they bring--please join us in using the term \"free software\".",
        "It's clear that other problems such as religious fundamentalism, overpopulation, damage to the environment, and the domination of business over government, science, thought, and society, are much bigger than non-free software. But many other people are already working on them, and I don't have any great aptitude or ideas for how to address them. So it seems best for me to keep working on the issue of free software. Besides, free software does counter one aspect of business domination of society.",
        "If in my lifetime the problem of non-free software is solved, I could perhaps relax and write software again. But I might instead try to help deal with the world's larger problems. Standing up to an evil system is exhilarating, and now I have a taste for it.",
        "I never imagined that the Free Software Movement would spawn a watered-down alternative, the Open Source Movement, which would become so well-known that people would ask me questions about 'open source' thinking that I work under that banner.",
        "Calling the whole system \"Linux\" leads people to think that the system's development was started in 1991 by Linus Torvalds. That is what most users seem to think. The occasional few users that do know about the GNU Project often think we played a secondary role--for example, they say to me, 'Of course I know about GNU--GNU developed some tools that are part of Linux'.",
        "I see nothing unethical in the job it does. Why shouldn't you send a copy of some music to a friend?",
        "The War on Drugs has continued for some 20 years, and we see little prospect of peace, despite the fact that it has totally failed and given the US an imprisonment rate almost equal to Russia. I fear that the War on Copying could go on for decades as well. To end it, we will need to rethink the copyright system, based on the Constitution's view that it is meant to benefit the public, not the copyright owners. Today, one of the benefits the public wants is the use of computers to share copies.",
        "Religious people often say that religion offers absolute certainty about right and wrong; 'god tells them' what it is. Even supposing that the aforementioned gods exist, and that the believers really know what the gods think, that still does not provide certainty, because any being no matter how powerful can still be wrong. Whether gods exist or not, there is no way to get absolute certainty about ethics. Without absolute certainty, what do we do? We do the best we can. Injustice is happening now; suffering is happening now. We have choices to make now. To insist on absolute certainty before starting to apply ethics to life decisions is a way of choosing to be amoral.",
        "It is funny, but I’m disappointed that it accentuates the shallow.",
        "No person, no idea, and no religion deserves to be illegal to insult, not even the Church of Emacs",
        "Laws that oppress people have no moral authority",
        "When the US adopted a requirement for US citizens to prove their citizenship in order to get a job, I vowed I would never do so. I will never again be an employee in the US.",
        "I'm the last survivor of a dead culture, and I don't really belong in the world anymore. And in some ways I feel I ought to be dead.",
        "Even I, the only man in the world who can get angry from looking at a picture of a penguin, find this bad news.",
        "Paying isn’t wrong, and being paid isn’t wrong. Trampling other people’s freedom and community is wrong, so the free software movement aims to put an end to it, at least in the area of software.",
        "Snow is so beautiful, it doesn't have to be useful.",
        "People sometimes ask me if it is a sin in the Church of Emacs to use vi. Using a free version of vi is not a sin; it is a penance. So happy hacking.",
        "You can use any editor you want, but remember that vi vi vi is the text editor of the beast.",
        "It doesn't take special talents to reproduce--even plants can do it. On the other hand, contributing to a program like Emacs takes real skill. That is really something to be proud of. It helps more people, too.",
        "Programming is not a science. Programming is a craft.",
        "My favorite programming languages are Lisp and C. However, since around 1992 I have worked mainly on free software activism, which means I am too busy to do much programming. Around 2008 I stopped doing programming projects.",
        "The most powerful programming language is Lisp. If you don't know Lisp (or its variant, Scheme), you don't know what it means for a programming language to be powerful and elegant. Once you learn Lisp, you will understand what is lacking in most other languages. When you start a Lisp system, it enters a read-eval-print loop. Most other languages have nothing comparable to read, nothing comparable to eval, and nothing comparable to print. What gaping deficiencies!",
        "C++ is a badly designed and ugly language. It would be a shame to use it in Emacs.",
        "You see, some people have a talent for programming. At ten to thirteen years old, typically, they're fascinated, and if they use a program, they want to know: “How does it do this?” But when they ask the teacher, if it's proprietary, the teacher has to say: “I'm sorry, it's a secret, we can't find out.” Which means education is forbidden. A proprietary program is the enemy of the spirit of education. It's knowledge withheld, so it should not be tolerated in a school, even though there may be plenty of people in the school who don't care about programming, don't want to learn this. Still, because it's the enemy of the spirit of education, it shouldn't be there in the school. But if the program is free, the teacher can explain what he knows, and then give out copies of the source code, saying: “Read it and you'll understand everything.” And those who are really fascinated, they will read it! And this gives them an opportunity to start to learn how to be good programmers. To learn to be a good programmer, you'll need to recognize that certain ways of writing code, even if they make sense to you and they are correct, they're not good because other people will have trouble understanding them. Good code is clear code that others will have an easy time working on when they need to make further changes. How do you learn to write good clear code? You do it by reading lots of code, and writing lots of code. Well, only free software offers the chance to read the code of large programs that we really use. And then you have to write lots of code, which means you have to write changes in large programs. How do you learn to write good code for the large programs? You have to start small, which does not mean small program, oh no! The challenges of the code for large programs don't even begin to appear in small programs. So the way you start small at writing code for large programs is by writing small changes in large programs. And only free software gives you the chance to do that.",
        "People could no longer learn hacking the way I did, by starting to work on a real operating system, making real improvements. In fact, in the 1980s I often came across newly graduated computer science majors who had never seen a real program in their lives. They had only seen toy exercises, school exercises, because every real program was a trade secret. They never had the experience of writing features for users to really use, and fixing the bugs that real users came across. The things you need to know to do real work.",
        "I have met bright students in computer science who have never seen the source code of a large program. They may be good at writing small programs, but they can't begin to learn the different skills of writing large ones if they can't see how others have done it.",
        "Free software permits students to learn how software works. Some students, on reaching their teens, want to learn everything there is to know about their computer and its software. They are intensely curious to read the source code of the programs that they use every day. To learn to write good code, students need to read lots of code and write lots of code. They need to read and understand real programs that people really use. Only free software permits this. Proprietary software rejects their thirst for knowledge: it says, “The knowledge you want is a secret—learning is forbidden!” Free software encourages everyone to learn. The free software community rejects the “priesthood of technology”, which keeps the general public in ignorance of how technology works; we encourage students of any age and situation to read the source code and learn as much as they want to know. Schools that use free software will enable gifted programming students to advance.",
        "It is hard to write a simple definition of something as varied as hacking, but I think what these activities have in common is playfulness, cleverness, and exploration. Thus, hacking means exploring the limits of what is possible, in a spirit of playful cleverness. Activities that display playful cleverness have \"hack value\".",
        "What they had in common was mainly love of excellence and programming. They wanted to make their programs that they used be as good as they could. They also wanted to make them do neat things. They wanted to be able to do something in a more exciting way than anyone believed possible and show \"Look how wonderful this is. I bet you didn't believe this could be done.\"",
        "A hacker is someone who enjoys playful cleverness—not necessarily with computers. The programmers in the old MIT free software community of the 60s and 70s referred to themselves as hackers. Around 1980, journalists who discovered the hacker community mistakenly took the term to mean “security breaker.”",
        "The use of “hacker” to mean “security breaker” is a confusion on the part of the mass media. We hackers refuse to recognize that meaning, and continue using the word to mean someone who loves to program, someone who enjoys playful cleverness, or the combination of the two.",
        "I am skeptical of the claim that voluntarily pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing.",
        "There is little evidence to justify the widespread assumption that willing participation in pedophilia hurts children. Granted, children may not dare say no to an older relative, or may not realize they could say no; in that case, even if they do not overtly object, the relationship may still feel imposed to them. That's not willing participation, it's imposed participation, a different issue.",
        "I've read that male dolphins try to have sex with humans, and female apes solicit sex from humans. What is wrong with giving them what they want, if that's what turns you on, or even just to gratify them?",
        "For personal reasons, I do not browse the web from my computer. (I also have no net connection much of the time.) To look at page I send mail to a daemon which runs wget and mails the page back to me. It is very efficient use of my time, but it is slow in real time.",
        "The Adobe flash plug-in is non-free software, and people should not install it, or suggest installing it, or even tell people it exists.",
        "Writing non-free software is not an ethically legitimate activity, so if people who do this run into trouble, that's good! All businesses based on non-free software ought to fail, and the sooner the better.",
        "It is unfortunate that he still has nonfree software in his computer. He needs to defenestrate it (which means, either throw Windows out of the computer or throw the computer out of the window).",
        "If the users don't control the program, the program controls the users. With proprietary software, there is always some entity, the \"owner\" of the program, that controls the program—and through it, exercises power over its users. A nonfree program is a yoke, an instrument of unjust power.",
        "Nobody deserves to have to die — not Jobs, not Mr. Bill, not even people guilty of bigger evils than theirs. But we all deserve the end of Jobs' malign influence on people's computing.",
        "This is the greatest political question of our time. How can we put an end to the empire of mega-corporations and restore democracy? If I knew I would be the savior of the world. What I think I can tell is that the media are crucial. The power of the corporate media enables truth to be suppressed and lies to be passed as truth. You probably heard that a half-truth can be worse than a lie. A lot of the things that our governments and media saying are 1/10 truths, 9/10 lies. And it doesn't take very many of them together to create a completely fictional world view (like the one that Bush presents when he talks). So I recommend that people stop listening to the mainstream media. Don't watch television news. Don't listen the news on radio. Don't read news from ordinary newspapers. Get it from variety of web sites which are not operated under the power of business money and you'll have better chance of not being fooled by the systematic lies that they all tell, because they're all paid by the same people to tell the same lies or 9/10 lies.",
        "If we are content with knowledge as a commodity, accessible only through a computerized bureaucracy, we can simply let companies provide it. But if we want to keep human knowledge open and freely available to humanity, we have to do the work to make it available that way. We have to write a free encyclopedia.",
        "Why is it bad to use an unauthorized copy of a proprietary program? Because it’s proprietary! So an unauthorized copy is almost as nasty as an authorized copy of the same program. They are both nasty because they are proprietary. The users don’t have control over them. If they pay developer – that makes it worse, because they are rewarding this delinquency. That’s why the authorized copy is worse. But they are both bad because they are both proprietary software. If you want freedom, you have to get rid of them both, because they both control you.",
        "Friends share music with each other, they don't allow themselves to be divided by a system that says that nobody is supposed to have copies."
    ],
    "Rob Pike": [
        "Where will we be ten years from now? CRT’s will be a thing of the past, multimedia will no longer be a buzzword, pen-based and voice input will be everywhere, and university students will still be editing with emacs. Pens and touchscreens are too low-bandwidth for real interaction; voice will probably also turn out to be inadequate. (Anyway, who would want to work in an environment surrounded by people talking to their computers?) Mice are sure to be with us a while longer, so we should learn how to use them well.",
        "Object-oriented design is the roman numerals of computing.",
        "On a related topic, let me say that I'm not much of a fan of object-oriented design. I've seen some beautiful stuff done with OO, and I've even done some OO stuff myself, but it's just one way to approach a problem. For some problems, it's an ideal way; for others, it's not such a good fit. [...] OO is great for problems where an interface applies naturally to a wide range of types, not so good for managing polymorphism (the machinations to get collections into OO languages are astounding to watch and can be hellish to work with), and remarkably ill-suited for network computing. That's why I reserve the right to match the language to the problem, and even - often - to coordinate software written in several languages towards solving a single problem. It's that last point - different languages for different subproblems - that sometimes seems lost to the OO crowd.",
        "Those days are dead and gone and the eulogy was delivered by Perl.",
        "I started keeping a list of these annoyances but it got too long and depressing so I just learned to live with them again. We really are using a 1970s era operating system well past its sell-by date. We get a lot done, and we have fun, but let's face it, the fundamental design of Unix is older than many of the readers of Slashdot, while lots of different, great ideas about computing and networks have been developed in the last 30 years. Using Unix is the computing equivalent of listening only to music by David Cassidy.",
        "The major things we saw wrong with Unix when we started talking about what would become Plan 9, back around 1985, all stemmed from the appearance of a network. As a stand-alone system, Unix was pretty good. But when you networked Unix machines together, you got a network of stand-alone systems instead of a seamless, integrated networked system. Instead of one big file system, one user community, one secure setup uniting your network of machines, you had a hodgepodge of workarounds to Unix's fundamental design decision that each machine is self-sufficient.",
        "One odd detail that I think was vital to how the group functioned was a result of the first Unix being run on a clunky minicomputer with terminals in the machine room. People working on the system congregated in the room - to use the computer, you pretty much had to be there. (This idea didn't seem odd back then; it was a natural evolution of the old hour-at-a-time way of booking machines like the IBM 7090.) The folks liked working that way, so when the machine was moved to a different room from the terminals, even when it was possible to connect from your private office, there was still a \"Unix room\" with a bunch of terminals where people would congregate, code, design, and just hang out. (The coffee machine was there too.)",
        "The Unix room still exists, and it may be the greatest cultural reason for the success of Unix as a technology. More groups could profit from its lesson, but it's really hard to add a Unix-room-like space to an existing organization. You need the culture to encourage people not to hide in their offices, you need a way of using systems that makes a public machine a viable place to work - typically by storing the data somewhere other than the \"desktop\" - and you need people like Ken and Dennis (and Brian Kernighan and Doug McIlroy and Mike Lesk and Stu Feldman and Greg Chesson and ...) hanging out in the room, but if you can make it work, it's magical. When I first started at the Labs, I spent most of my time in the Unix room. The buzz was palpable; the education unparalleled."
    ],
    "Tim Berners-Lee": [
        "I just had to take the hypertext idea and connect it to the TCP and DNS ideas and — ta-da!— the World Wide Web.",
        "I think in general it's clear that most bad things come from misunderstanding, and communication is generally the way to resolve misunderstandings, and the Web's a form of communications, so it generally should be good.",
        "I don't believe in the sort of eureka moment idea. I think it's a myth. I'm very suspicious that actually Archimedes had been thinking about that problem for a long time. And it wasn't that suddenly it came to him.",
        "Web 1.0 was all about connecting people. It was an interactive space, and I think Web 2.0 is of course a piece of jargon, nobody even knows what it means. If Web 2.0 for you is blogs and wikis, then that is people to people. But that was what the Web was supposed to be all along.",
        "Anyone who has lost track of time when using a computer knows the propensity to dream, the urge to make dreams come true and the tendency to miss lunch.",
        "Now, if someone tries to monopolize the Web, for example pushes proprietary variations on network protocols, then that would make me unhappy.",
        "Anyone who slaps a ‘this page is best viewed with Browser X’ label on a Web page appears to be yearning for the bad old days, before the Web, when you had very little chance of reading a document written on another computer, another word processor, or another network.",
        "Cool URIs don't change",
        "It is the the duty of a Webmaster to allocate URIs which you will be able to stand by in 2 years, in 20 years, in 200 years.",
        "Legend has it that every new technology is first used for something related to sex or pornography. That seems to be the way of humankind.",
        "When I invented the web, I didn't have to ask anyone's permission. Now, hundreds of millions of people are using it freely. I am worried that that is going end in the USA. … Democracy depends on freedom of speech. Freedom of connection, with any application, to any party, is the fundamental social basis of the Internet, and, now, the society based on it. Let's see whether the United States is capable as acting according to its important values, or whether it is, as so many people are saying, run by the misguided short-term interested of large corporations. I hope that Congress can protect net neutrality, so I can continue to innovate in the internet space. I want to see the explosion of innovations happening out there on the Web, so diverse and so exciting, continue unabated.",
        "The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.",
        "What's very important from my point of view is that there is one web … Anyone that tries to chop it into two will find that their piece looks very boring.",
        "The Web does not just connect machines, it connects people.",
        "This is for everyone",
        "We’ve lost a fighter. We’ve lost somebody who put huge energy into righting wrongs. There are people around the world who take it on themselves to just try to fix the world but very few of them do it 24/7 like Aaron. Very few of them are as dedicated. So of the people who are fighting for right, and what he was doing up to the end was fighting for right, we have lost one of our own. … We’ve lost a great person.",
        "Aaron is dead. Wanderers in this crazy world, we have lost a mentor, a wise elder. Hackers for right, we are one down, we have lost one of our own. Nurtures, careers, listeners, feeders, parents all, we have lost a child. Let us all weep.",
        "When somebody has learned how to program a computer … You're joining a group of people who can do incredible things. They can make the computer do anything they can imagine.",
        "The web is more a social creation than a technical one. I designed it for a social effect — to help people work together — and not as a technical toy. The ultimate goal of the Web is to support and improve our weblike existence in the world. We clump into families, associations, and companies. We develop trust across the miles and distrust around the corner.",
        "At CERN there was a credo meant to avoid unnecessary labors, it said that when acquiring new technology: Buy, Don't Build. There were several commercial hypertext editors and I thought we could just add some internet code, so that the hypertext documents could then be sent over the internet. I thought the companies engaged in the then fringe field of hypertext would immediately grasp the possibilities of the web. Unfortunately, their reaction was quite the opposite... it seemed that explaining the vision of the web was exceedingly difficult without a web browser in hand, people had to be able to grasp the web in full, which meant imagining a whole world populated with websites and browsers. It was a lot to ask. Despite the buy don't build credo I came to the conclusion that I was going to have to create the web on my own.",
        "In an extreme view, the world can be seen as only connections, nothing else. We think of a dictionary as the repository of meaning, but it defines words only in terms of other words. I liked the idea that a piece of information is really defined only by what it's related to, and how it's related. There really is little else to meaning. The structure is everything. There are billions of neurons in our brains, but what are neurons? Just cells. The brain has no knowledge until connections are made between neurons. All that we know, all that we are, comes from the way our neurons are connected.",
        "The trick... is to make sure that each limited mechanical part of the Web, each application, is within itself composed of simple parts that will never get too powerful."
    ]
}
